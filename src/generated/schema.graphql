### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AggregateAnswer {
  _avg: AnswerAvgAggregateOutputType
  _count: AnswerCountAggregateOutputType
  _max: AnswerMaxAggregateOutputType
  _min: AnswerMinAggregateOutputType
  _sum: AnswerSumAggregateOutputType
}

type AggregateDirection {
  _avg: DirectionAvgAggregateOutputType
  _count: DirectionCountAggregateOutputType
  _max: DirectionMaxAggregateOutputType
  _min: DirectionMinAggregateOutputType
  _sum: DirectionSumAggregateOutputType
}

type AggregateMessage {
  _avg: MessageAvgAggregateOutputType
  _count: MessageCountAggregateOutputType
  _max: MessageMaxAggregateOutputType
  _min: MessageMinAggregateOutputType
  _sum: MessageSumAggregateOutputType
}

type AggregateMessagerGroup {
  _avg: MessagerGroupAvgAggregateOutputType
  _count: MessagerGroupCountAggregateOutputType
  _max: MessagerGroupMaxAggregateOutputType
  _min: MessagerGroupMinAggregateOutputType
  _sum: MessagerGroupSumAggregateOutputType
}

type AggregateResponse {
  _avg: ResponseAvgAggregateOutputType
  _count: ResponseCountAggregateOutputType
  _max: ResponseMaxAggregateOutputType
  _min: ResponseMinAggregateOutputType
  _sum: ResponseSumAggregateOutputType
}

type AggregateSpecialization {
  _avg: SpecializationAvgAggregateOutputType
  _count: SpecializationCountAggregateOutputType
  _max: SpecializationMaxAggregateOutputType
  _min: SpecializationMinAggregateOutputType
  _sum: SpecializationSumAggregateOutputType
}

type AggregateTask {
  _avg: TaskAvgAggregateOutputType
  _count: TaskCountAggregateOutputType
  _max: TaskMaxAggregateOutputType
  _min: TaskMinAggregateOutputType
  _sum: TaskSumAggregateOutputType
}

type AggregateTaskAnswer {
  _avg: TaskAnswerAvgAggregateOutputType
  _count: TaskAnswerCountAggregateOutputType
  _max: TaskAnswerMaxAggregateOutputType
  _min: TaskAnswerMinAggregateOutputType
  _sum: TaskAnswerSumAggregateOutputType
}

type AggregateTest {
  _avg: TestAvgAggregateOutputType
  _count: TestCountAggregateOutputType
  _max: TestMaxAggregateOutputType
  _min: TestMinAggregateOutputType
  _sum: TestSumAggregateOutputType
}

type AggregateUser {
  _avg: UserAvgAggregateOutputType
  _count: UserCountAggregateOutputType
  _max: UserMaxAggregateOutputType
  _min: UserMinAggregateOutputType
  _sum: UserSumAggregateOutputType
}

type Answer {
  _count: AnswerCountOutputType!
  answer: String
  createdAt: DateTime!
  id: Int!
  response(cursor: ResponseWhereUniqueInput, distinct: [ResponseScalarFieldEnum], orderBy: [ResponseOrderByWithRelationInput], skip: Int, take: Int, where: ResponseWhereInput): [Response!]!
  taskAnswers(cursor: TaskAnswerWhereUniqueInput, distinct: [TaskAnswerScalarFieldEnum], orderBy: [TaskAnswerOrderByWithRelationInput], skip: Int, take: Int, where: TaskAnswerWhereInput): [TaskAnswer!]!
  test: Test!
  testId: Int!
}

type AnswerAvgAggregateOutputType {
  id: Float
  testId: Float
}

input AnswerAvgOrderByAggregateInput {
  id: SortOrder
  testId: SortOrder
}

type AnswerCountAggregateOutputType {
  _all: Int!
  answer: Int!
  createdAt: Int!
  id: Int!
  testId: Int!
}

input AnswerCountOrderByAggregateInput {
  answer: SortOrder
  createdAt: SortOrder
  id: SortOrder
  testId: SortOrder
}

type AnswerCountOutputType {
  response: Int!
  taskAnswers: Int!
}

input AnswerCreateInput {
  answer: String
  createdAt: DateTime
  response: ResponseCreateNestedManyWithoutAnswersInput
  taskAnswers: TaskAnswerCreateNestedManyWithoutAnswerModelInput
  test: TestCreateNestedOneWithoutAnswersInput!
}

input AnswerCreateManyInput {
  answer: String
  createdAt: DateTime
  id: Int
  testId: Int!
}

input AnswerCreateManyTestInput {
  answer: String
  createdAt: DateTime
  id: Int
}

input AnswerCreateManyTestInputEnvelope {
  data: AnswerCreateManyTestInput!
  skipDuplicates: Boolean
}

input AnswerCreateNestedManyWithoutResponseInput {
  connect: [AnswerWhereUniqueInput]
  connectOrCreate: [AnswerCreateOrConnectWithoutResponseInput]
  create: [AnswerCreateWithoutResponseInput]
}

input AnswerCreateNestedManyWithoutTestInput {
  connect: [AnswerWhereUniqueInput]
  connectOrCreate: [AnswerCreateOrConnectWithoutTestInput]
  create: [AnswerCreateWithoutTestInput]
  createMany: AnswerCreateManyTestInputEnvelope
}

input AnswerCreateNestedOneWithoutTaskAnswersInput {
  connect: AnswerWhereUniqueInput
  connectOrCreate: AnswerCreateOrConnectWithoutTaskAnswersInput
  create: AnswerCreateWithoutTaskAnswersInput
}

input AnswerCreateOrConnectWithoutResponseInput {
  create: AnswerCreateWithoutResponseInput!
  where: AnswerWhereUniqueInput!
}

input AnswerCreateOrConnectWithoutTaskAnswersInput {
  create: AnswerCreateWithoutTaskAnswersInput!
  where: AnswerWhereUniqueInput!
}

input AnswerCreateOrConnectWithoutTestInput {
  create: AnswerCreateWithoutTestInput!
  where: AnswerWhereUniqueInput!
}

input AnswerCreateWithoutResponseInput {
  answer: String
  createdAt: DateTime
  taskAnswers: TaskAnswerCreateNestedManyWithoutAnswerModelInput
  test: TestCreateNestedOneWithoutAnswersInput!
}

input AnswerCreateWithoutTaskAnswersInput {
  answer: String
  createdAt: DateTime
  response: ResponseCreateNestedManyWithoutAnswersInput
  test: TestCreateNestedOneWithoutAnswersInput!
}

input AnswerCreateWithoutTestInput {
  answer: String
  createdAt: DateTime
  response: ResponseCreateNestedManyWithoutAnswersInput
  taskAnswers: TaskAnswerCreateNestedManyWithoutAnswerModelInput
}

input AnswerListRelationFilter {
  every: AnswerWhereInput
  none: AnswerWhereInput
  some: AnswerWhereInput
}

type AnswerMaxAggregateOutputType {
  answer: String
  createdAt: DateTime
  id: Int
  testId: Int
}

input AnswerMaxOrderByAggregateInput {
  answer: SortOrder
  createdAt: SortOrder
  id: SortOrder
  testId: SortOrder
}

type AnswerMinAggregateOutputType {
  answer: String
  createdAt: DateTime
  id: Int
  testId: Int
}

input AnswerMinOrderByAggregateInput {
  answer: SortOrder
  createdAt: SortOrder
  id: SortOrder
  testId: SortOrder
}

input AnswerOrderByRelationAggregateInput {
  _count: SortOrder
}

input AnswerOrderByWithAggregationInput {
  _avg: AnswerAvgOrderByAggregateInput
  _count: AnswerCountOrderByAggregateInput
  _max: AnswerMaxOrderByAggregateInput
  _min: AnswerMinOrderByAggregateInput
  _sum: AnswerSumOrderByAggregateInput
  answer: SortOrderInput
  createdAt: SortOrder
  id: SortOrder
  testId: SortOrder
}

input AnswerOrderByWithRelationInput {
  answer: SortOrderInput
  createdAt: SortOrder
  id: SortOrder
  response: ResponseOrderByRelationAggregateInput
  taskAnswers: TaskAnswerOrderByRelationAggregateInput
  test: TestOrderByWithRelationInput
  testId: SortOrder
}

input AnswerRelationFilter {
  is: AnswerWhereInput
  isNot: AnswerWhereInput
}

enum AnswerScalarFieldEnum {
  answer
  createdAt
  id
  testId
}

input AnswerScalarWhereInput {
  AND: [AnswerScalarWhereInput]
  NOT: [AnswerScalarWhereInput]
  OR: [AnswerScalarWhereInput]
  answer: StringNullableFilter
  createdAt: DateTimeFilter
  id: IntFilter
  testId: IntFilter
}

input AnswerScalarWhereWithAggregatesInput {
  AND: [AnswerScalarWhereWithAggregatesInput]
  NOT: [AnswerScalarWhereWithAggregatesInput]
  OR: [AnswerScalarWhereWithAggregatesInput]
  answer: StringNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  testId: IntWithAggregatesFilter
}

type AnswerSumAggregateOutputType {
  id: Int
  testId: Int
}

input AnswerSumOrderByAggregateInput {
  id: SortOrder
  testId: SortOrder
}

input AnswerUncheckedCreateInput {
  answer: String
  createdAt: DateTime
  id: Int
  response: ResponseUncheckedCreateNestedManyWithoutAnswersInput
  taskAnswers: TaskAnswerUncheckedCreateNestedManyWithoutAnswerModelInput
  testId: Int!
}

input AnswerUncheckedCreateNestedManyWithoutResponseInput {
  connect: [AnswerWhereUniqueInput]
  connectOrCreate: [AnswerCreateOrConnectWithoutResponseInput]
  create: [AnswerCreateWithoutResponseInput]
}

input AnswerUncheckedCreateNestedManyWithoutTestInput {
  connect: [AnswerWhereUniqueInput]
  connectOrCreate: [AnswerCreateOrConnectWithoutTestInput]
  create: [AnswerCreateWithoutTestInput]
  createMany: AnswerCreateManyTestInputEnvelope
}

input AnswerUncheckedCreateWithoutResponseInput {
  answer: String
  createdAt: DateTime
  id: Int
  taskAnswers: TaskAnswerUncheckedCreateNestedManyWithoutAnswerModelInput
  testId: Int!
}

input AnswerUncheckedCreateWithoutTaskAnswersInput {
  answer: String
  createdAt: DateTime
  id: Int
  response: ResponseUncheckedCreateNestedManyWithoutAnswersInput
  testId: Int!
}

input AnswerUncheckedCreateWithoutTestInput {
  answer: String
  createdAt: DateTime
  id: Int
  response: ResponseUncheckedCreateNestedManyWithoutAnswersInput
  taskAnswers: TaskAnswerUncheckedCreateNestedManyWithoutAnswerModelInput
}

input AnswerUncheckedUpdateInput {
  answer: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  response: ResponseUncheckedUpdateManyWithoutAnswersNestedInput
  taskAnswers: TaskAnswerUncheckedUpdateManyWithoutAnswerModelNestedInput
  testId: IntFieldUpdateOperationsInput
}

input AnswerUncheckedUpdateManyInput {
  answer: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  testId: IntFieldUpdateOperationsInput
}

input AnswerUncheckedUpdateManyWithoutResponseInput {
  answer: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  testId: IntFieldUpdateOperationsInput
}

input AnswerUncheckedUpdateManyWithoutResponseNestedInput {
  connect: [AnswerWhereUniqueInput]
  connectOrCreate: [AnswerCreateOrConnectWithoutResponseInput]
  create: [AnswerCreateWithoutResponseInput]
  delete: [AnswerWhereUniqueInput]
  deleteMany: [AnswerScalarWhereInput]
  disconnect: [AnswerWhereUniqueInput]
  set: [AnswerWhereUniqueInput]
  update: [AnswerUpdateWithWhereUniqueWithoutResponseInput]
  updateMany: [AnswerUpdateManyWithWhereWithoutResponseInput]
  upsert: [AnswerUpsertWithWhereUniqueWithoutResponseInput]
}

input AnswerUncheckedUpdateManyWithoutTestInput {
  answer: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
}

input AnswerUncheckedUpdateManyWithoutTestNestedInput {
  connect: [AnswerWhereUniqueInput]
  connectOrCreate: [AnswerCreateOrConnectWithoutTestInput]
  create: [AnswerCreateWithoutTestInput]
  createMany: AnswerCreateManyTestInputEnvelope
  delete: [AnswerWhereUniqueInput]
  deleteMany: [AnswerScalarWhereInput]
  disconnect: [AnswerWhereUniqueInput]
  set: [AnswerWhereUniqueInput]
  update: [AnswerUpdateWithWhereUniqueWithoutTestInput]
  updateMany: [AnswerUpdateManyWithWhereWithoutTestInput]
  upsert: [AnswerUpsertWithWhereUniqueWithoutTestInput]
}

input AnswerUncheckedUpdateWithoutResponseInput {
  answer: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  taskAnswers: TaskAnswerUncheckedUpdateManyWithoutAnswerModelNestedInput
  testId: IntFieldUpdateOperationsInput
}

input AnswerUncheckedUpdateWithoutTaskAnswersInput {
  answer: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  response: ResponseUncheckedUpdateManyWithoutAnswersNestedInput
  testId: IntFieldUpdateOperationsInput
}

input AnswerUncheckedUpdateWithoutTestInput {
  answer: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  response: ResponseUncheckedUpdateManyWithoutAnswersNestedInput
  taskAnswers: TaskAnswerUncheckedUpdateManyWithoutAnswerModelNestedInput
}

input AnswerUpdateInput {
  answer: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  response: ResponseUpdateManyWithoutAnswersNestedInput
  taskAnswers: TaskAnswerUpdateManyWithoutAnswerModelNestedInput
  test: TestUpdateOneRequiredWithoutAnswersNestedInput
}

input AnswerUpdateManyMutationInput {
  answer: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
}

input AnswerUpdateManyWithWhereWithoutResponseInput {
  data: AnswerUpdateManyMutationInput!
  where: AnswerScalarWhereInput!
}

input AnswerUpdateManyWithWhereWithoutTestInput {
  data: AnswerUpdateManyMutationInput!
  where: AnswerScalarWhereInput!
}

input AnswerUpdateManyWithoutResponseNestedInput {
  connect: [AnswerWhereUniqueInput]
  connectOrCreate: [AnswerCreateOrConnectWithoutResponseInput]
  create: [AnswerCreateWithoutResponseInput]
  delete: [AnswerWhereUniqueInput]
  deleteMany: [AnswerScalarWhereInput]
  disconnect: [AnswerWhereUniqueInput]
  set: [AnswerWhereUniqueInput]
  update: [AnswerUpdateWithWhereUniqueWithoutResponseInput]
  updateMany: [AnswerUpdateManyWithWhereWithoutResponseInput]
  upsert: [AnswerUpsertWithWhereUniqueWithoutResponseInput]
}

input AnswerUpdateManyWithoutTestNestedInput {
  connect: [AnswerWhereUniqueInput]
  connectOrCreate: [AnswerCreateOrConnectWithoutTestInput]
  create: [AnswerCreateWithoutTestInput]
  createMany: AnswerCreateManyTestInputEnvelope
  delete: [AnswerWhereUniqueInput]
  deleteMany: [AnswerScalarWhereInput]
  disconnect: [AnswerWhereUniqueInput]
  set: [AnswerWhereUniqueInput]
  update: [AnswerUpdateWithWhereUniqueWithoutTestInput]
  updateMany: [AnswerUpdateManyWithWhereWithoutTestInput]
  upsert: [AnswerUpsertWithWhereUniqueWithoutTestInput]
}

input AnswerUpdateOneRequiredWithoutTaskAnswersNestedInput {
  connect: AnswerWhereUniqueInput
  connectOrCreate: AnswerCreateOrConnectWithoutTaskAnswersInput
  create: AnswerCreateWithoutTaskAnswersInput
  update: AnswerUpdateToOneWithWhereWithoutTaskAnswersInput
  upsert: AnswerUpsertWithoutTaskAnswersInput
}

input AnswerUpdateToOneWithWhereWithoutTaskAnswersInput {
  data: AnswerUpdateWithoutTaskAnswersInput!
  where: AnswerWhereInput
}

input AnswerUpdateWithWhereUniqueWithoutResponseInput {
  data: AnswerUpdateWithoutResponseInput!
  where: AnswerWhereUniqueInput!
}

input AnswerUpdateWithWhereUniqueWithoutTestInput {
  data: AnswerUpdateWithoutTestInput!
  where: AnswerWhereUniqueInput!
}

input AnswerUpdateWithoutResponseInput {
  answer: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  taskAnswers: TaskAnswerUpdateManyWithoutAnswerModelNestedInput
  test: TestUpdateOneRequiredWithoutAnswersNestedInput
}

input AnswerUpdateWithoutTaskAnswersInput {
  answer: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  response: ResponseUpdateManyWithoutAnswersNestedInput
  test: TestUpdateOneRequiredWithoutAnswersNestedInput
}

input AnswerUpdateWithoutTestInput {
  answer: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  response: ResponseUpdateManyWithoutAnswersNestedInput
  taskAnswers: TaskAnswerUpdateManyWithoutAnswerModelNestedInput
}

input AnswerUpsertWithWhereUniqueWithoutResponseInput {
  create: AnswerCreateWithoutResponseInput!
  update: AnswerUpdateWithoutResponseInput!
  where: AnswerWhereUniqueInput!
}

input AnswerUpsertWithWhereUniqueWithoutTestInput {
  create: AnswerCreateWithoutTestInput!
  update: AnswerUpdateWithoutTestInput!
  where: AnswerWhereUniqueInput!
}

input AnswerUpsertWithoutTaskAnswersInput {
  create: AnswerCreateWithoutTaskAnswersInput!
  update: AnswerUpdateWithoutTaskAnswersInput!
  where: AnswerWhereInput
}

input AnswerWhereInput {
  AND: [AnswerWhereInput]
  NOT: [AnswerWhereInput]
  OR: [AnswerWhereInput]
  answer: StringNullableFilter
  createdAt: DateTimeFilter
  id: IntFilter
  response: ResponseListRelationFilter
  taskAnswers: TaskAnswerListRelationFilter
  test: TestRelationFilter
  testId: IntFilter
}

input AnswerWhereUniqueInput {
  AND: [AnswerWhereInput]
  NOT: [AnswerWhereInput]
  OR: [AnswerWhereInput]
  answer: StringNullableFilter
  createdAt: DateTimeFilter
  id: Int
  response: ResponseListRelationFilter
  taskAnswers: TaskAnswerListRelationFilter
  test: TestRelationFilter
  testId: IntFilter
}

type BatchPayload {
  count: Int!
}

"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
@see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt
"""
scalar BigInt

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input BoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

"""The `Byte` scalar type represents byte value as a Buffer"""
scalar Bytes

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime]
}

input DateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTime]
}

"""An arbitrary-precision Decimal type"""
scalar Decimal

type Direction {
  _count: DirectionCountOutputType!
  createdAt: DateTime!
  description: String!
  id: Int!
  responses(cursor: ResponseWhereUniqueInput, distinct: [ResponseScalarFieldEnum], orderBy: [ResponseOrderByWithRelationInput], skip: Int, take: Int, where: ResponseWhereInput): [Response!]!
  specialization: Specialization!
  specializationId: Int!
  test(where: TestWhereInput): Test
  testId: Int
  title: String!
  type: DirectionType
}

type DirectionAvgAggregateOutputType {
  id: Float
  specializationId: Float
  testId: Float
}

input DirectionAvgOrderByAggregateInput {
  id: SortOrder
  specializationId: SortOrder
  testId: SortOrder
}

type DirectionCountAggregateOutputType {
  _all: Int!
  createdAt: Int!
  description: Int!
  id: Int!
  specializationId: Int!
  testId: Int!
  title: Int!
  type: Int!
}

input DirectionCountOrderByAggregateInput {
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  specializationId: SortOrder
  testId: SortOrder
  title: SortOrder
  type: SortOrder
}

type DirectionCountOutputType {
  responses: Int!
}

input DirectionCreateInput {
  createdAt: DateTime
  description: String!
  responses: ResponseCreateNestedManyWithoutDirectionInput
  specialization: SpecializationCreateNestedOneWithoutDirectionsInput!
  test: TestCreateNestedOneWithoutDirectionInput
  title: String!
  type: DirectionType
}

input DirectionCreateManyInput {
  createdAt: DateTime
  description: String!
  id: Int
  specializationId: Int!
  testId: Int
  title: String!
  type: DirectionType
}

input DirectionCreateManySpecializationInput {
  createdAt: DateTime
  description: String!
  id: Int
  testId: Int
  title: String!
  type: DirectionType
}

input DirectionCreateManySpecializationInputEnvelope {
  data: DirectionCreateManySpecializationInput!
  skipDuplicates: Boolean
}

input DirectionCreateManyTestInput {
  createdAt: DateTime
  description: String!
  id: Int
  specializationId: Int!
  title: String!
  type: DirectionType
}

input DirectionCreateManyTestInputEnvelope {
  data: DirectionCreateManyTestInput!
  skipDuplicates: Boolean
}

input DirectionCreateNestedManyWithoutSpecializationInput {
  connect: [DirectionWhereUniqueInput]
  connectOrCreate: [DirectionCreateOrConnectWithoutSpecializationInput]
  create: [DirectionCreateWithoutSpecializationInput]
  createMany: DirectionCreateManySpecializationInputEnvelope
}

input DirectionCreateNestedManyWithoutTestInput {
  connect: [DirectionWhereUniqueInput]
  connectOrCreate: [DirectionCreateOrConnectWithoutTestInput]
  create: [DirectionCreateWithoutTestInput]
  createMany: DirectionCreateManyTestInputEnvelope
}

input DirectionCreateNestedOneWithoutResponsesInput {
  connect: DirectionWhereUniqueInput
  connectOrCreate: DirectionCreateOrConnectWithoutResponsesInput
  create: DirectionCreateWithoutResponsesInput
}

input DirectionCreateOrConnectWithoutResponsesInput {
  create: DirectionCreateWithoutResponsesInput!
  where: DirectionWhereUniqueInput!
}

input DirectionCreateOrConnectWithoutSpecializationInput {
  create: DirectionCreateWithoutSpecializationInput!
  where: DirectionWhereUniqueInput!
}

input DirectionCreateOrConnectWithoutTestInput {
  create: DirectionCreateWithoutTestInput!
  where: DirectionWhereUniqueInput!
}

input DirectionCreateWithoutResponsesInput {
  createdAt: DateTime
  description: String!
  specialization: SpecializationCreateNestedOneWithoutDirectionsInput!
  test: TestCreateNestedOneWithoutDirectionInput
  title: String!
  type: DirectionType
}

input DirectionCreateWithoutSpecializationInput {
  createdAt: DateTime
  description: String!
  responses: ResponseCreateNestedManyWithoutDirectionInput
  test: TestCreateNestedOneWithoutDirectionInput
  title: String!
  type: DirectionType
}

input DirectionCreateWithoutTestInput {
  createdAt: DateTime
  description: String!
  responses: ResponseCreateNestedManyWithoutDirectionInput
  specialization: SpecializationCreateNestedOneWithoutDirectionsInput!
  title: String!
  type: DirectionType
}

input DirectionListRelationFilter {
  every: DirectionWhereInput
  none: DirectionWhereInput
  some: DirectionWhereInput
}

type DirectionMaxAggregateOutputType {
  createdAt: DateTime
  description: String
  id: Int
  specializationId: Int
  testId: Int
  title: String
  type: DirectionType
}

input DirectionMaxOrderByAggregateInput {
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  specializationId: SortOrder
  testId: SortOrder
  title: SortOrder
  type: SortOrder
}

type DirectionMinAggregateOutputType {
  createdAt: DateTime
  description: String
  id: Int
  specializationId: Int
  testId: Int
  title: String
  type: DirectionType
}

input DirectionMinOrderByAggregateInput {
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  specializationId: SortOrder
  testId: SortOrder
  title: SortOrder
  type: SortOrder
}

input DirectionOrderByRelationAggregateInput {
  _count: SortOrder
}

input DirectionOrderByWithAggregationInput {
  _avg: DirectionAvgOrderByAggregateInput
  _count: DirectionCountOrderByAggregateInput
  _max: DirectionMaxOrderByAggregateInput
  _min: DirectionMinOrderByAggregateInput
  _sum: DirectionSumOrderByAggregateInput
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  specializationId: SortOrder
  testId: SortOrderInput
  title: SortOrder
  type: SortOrderInput
}

input DirectionOrderByWithRelationInput {
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  responses: ResponseOrderByRelationAggregateInput
  specialization: SpecializationOrderByWithRelationInput
  specializationId: SortOrder
  test: TestOrderByWithRelationInput
  testId: SortOrderInput
  title: SortOrder
  type: SortOrderInput
}

input DirectionRelationFilter {
  is: DirectionWhereInput
  isNot: DirectionWhereInput
}

enum DirectionScalarFieldEnum {
  createdAt
  description
  id
  specializationId
  testId
  title
  type
}

input DirectionScalarWhereInput {
  AND: [DirectionScalarWhereInput]
  NOT: [DirectionScalarWhereInput]
  OR: [DirectionScalarWhereInput]
  createdAt: DateTimeFilter
  description: StringFilter
  id: IntFilter
  specializationId: IntFilter
  testId: IntNullableFilter
  title: StringFilter
  type: EnumDirectionTypeNullableFilter
}

input DirectionScalarWhereWithAggregatesInput {
  AND: [DirectionScalarWhereWithAggregatesInput]
  NOT: [DirectionScalarWhereWithAggregatesInput]
  OR: [DirectionScalarWhereWithAggregatesInput]
  createdAt: DateTimeWithAggregatesFilter
  description: StringWithAggregatesFilter
  id: IntWithAggregatesFilter
  specializationId: IntWithAggregatesFilter
  testId: IntNullableWithAggregatesFilter
  title: StringWithAggregatesFilter
  type: EnumDirectionTypeNullableWithAggregatesFilter
}

type DirectionSumAggregateOutputType {
  id: Int
  specializationId: Int
  testId: Int
}

input DirectionSumOrderByAggregateInput {
  id: SortOrder
  specializationId: SortOrder
  testId: SortOrder
}

enum DirectionType {
  internship
  practice
}

input DirectionUncheckedCreateInput {
  createdAt: DateTime
  description: String!
  id: Int
  responses: ResponseUncheckedCreateNestedManyWithoutDirectionInput
  specializationId: Int!
  testId: Int
  title: String!
  type: DirectionType
}

input DirectionUncheckedCreateNestedManyWithoutSpecializationInput {
  connect: [DirectionWhereUniqueInput]
  connectOrCreate: [DirectionCreateOrConnectWithoutSpecializationInput]
  create: [DirectionCreateWithoutSpecializationInput]
  createMany: DirectionCreateManySpecializationInputEnvelope
}

input DirectionUncheckedCreateNestedManyWithoutTestInput {
  connect: [DirectionWhereUniqueInput]
  connectOrCreate: [DirectionCreateOrConnectWithoutTestInput]
  create: [DirectionCreateWithoutTestInput]
  createMany: DirectionCreateManyTestInputEnvelope
}

input DirectionUncheckedCreateWithoutResponsesInput {
  createdAt: DateTime
  description: String!
  id: Int
  specializationId: Int!
  testId: Int
  title: String!
  type: DirectionType
}

input DirectionUncheckedCreateWithoutSpecializationInput {
  createdAt: DateTime
  description: String!
  id: Int
  responses: ResponseUncheckedCreateNestedManyWithoutDirectionInput
  testId: Int
  title: String!
  type: DirectionType
}

input DirectionUncheckedCreateWithoutTestInput {
  createdAt: DateTime
  description: String!
  id: Int
  responses: ResponseUncheckedCreateNestedManyWithoutDirectionInput
  specializationId: Int!
  title: String!
  type: DirectionType
}

input DirectionUncheckedUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  responses: ResponseUncheckedUpdateManyWithoutDirectionNestedInput
  specializationId: IntFieldUpdateOperationsInput
  testId: NullableIntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  type: NullableEnumDirectionTypeFieldUpdateOperationsInput
}

input DirectionUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  specializationId: IntFieldUpdateOperationsInput
  testId: NullableIntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  type: NullableEnumDirectionTypeFieldUpdateOperationsInput
}

input DirectionUncheckedUpdateManyWithoutSpecializationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  testId: NullableIntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  type: NullableEnumDirectionTypeFieldUpdateOperationsInput
}

input DirectionUncheckedUpdateManyWithoutSpecializationNestedInput {
  connect: [DirectionWhereUniqueInput]
  connectOrCreate: [DirectionCreateOrConnectWithoutSpecializationInput]
  create: [DirectionCreateWithoutSpecializationInput]
  createMany: DirectionCreateManySpecializationInputEnvelope
  delete: [DirectionWhereUniqueInput]
  deleteMany: [DirectionScalarWhereInput]
  disconnect: [DirectionWhereUniqueInput]
  set: [DirectionWhereUniqueInput]
  update: [DirectionUpdateWithWhereUniqueWithoutSpecializationInput]
  updateMany: [DirectionUpdateManyWithWhereWithoutSpecializationInput]
  upsert: [DirectionUpsertWithWhereUniqueWithoutSpecializationInput]
}

input DirectionUncheckedUpdateManyWithoutTestInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  specializationId: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  type: NullableEnumDirectionTypeFieldUpdateOperationsInput
}

input DirectionUncheckedUpdateManyWithoutTestNestedInput {
  connect: [DirectionWhereUniqueInput]
  connectOrCreate: [DirectionCreateOrConnectWithoutTestInput]
  create: [DirectionCreateWithoutTestInput]
  createMany: DirectionCreateManyTestInputEnvelope
  delete: [DirectionWhereUniqueInput]
  deleteMany: [DirectionScalarWhereInput]
  disconnect: [DirectionWhereUniqueInput]
  set: [DirectionWhereUniqueInput]
  update: [DirectionUpdateWithWhereUniqueWithoutTestInput]
  updateMany: [DirectionUpdateManyWithWhereWithoutTestInput]
  upsert: [DirectionUpsertWithWhereUniqueWithoutTestInput]
}

input DirectionUncheckedUpdateWithoutResponsesInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  specializationId: IntFieldUpdateOperationsInput
  testId: NullableIntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  type: NullableEnumDirectionTypeFieldUpdateOperationsInput
}

input DirectionUncheckedUpdateWithoutSpecializationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  responses: ResponseUncheckedUpdateManyWithoutDirectionNestedInput
  testId: NullableIntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  type: NullableEnumDirectionTypeFieldUpdateOperationsInput
}

input DirectionUncheckedUpdateWithoutTestInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  responses: ResponseUncheckedUpdateManyWithoutDirectionNestedInput
  specializationId: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  type: NullableEnumDirectionTypeFieldUpdateOperationsInput
}

input DirectionUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  responses: ResponseUpdateManyWithoutDirectionNestedInput
  specialization: SpecializationUpdateOneRequiredWithoutDirectionsNestedInput
  test: TestUpdateOneWithoutDirectionNestedInput
  title: StringFieldUpdateOperationsInput
  type: NullableEnumDirectionTypeFieldUpdateOperationsInput
}

input DirectionUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  type: NullableEnumDirectionTypeFieldUpdateOperationsInput
}

input DirectionUpdateManyWithWhereWithoutSpecializationInput {
  data: DirectionUpdateManyMutationInput!
  where: DirectionScalarWhereInput!
}

input DirectionUpdateManyWithWhereWithoutTestInput {
  data: DirectionUpdateManyMutationInput!
  where: DirectionScalarWhereInput!
}

input DirectionUpdateManyWithoutSpecializationNestedInput {
  connect: [DirectionWhereUniqueInput]
  connectOrCreate: [DirectionCreateOrConnectWithoutSpecializationInput]
  create: [DirectionCreateWithoutSpecializationInput]
  createMany: DirectionCreateManySpecializationInputEnvelope
  delete: [DirectionWhereUniqueInput]
  deleteMany: [DirectionScalarWhereInput]
  disconnect: [DirectionWhereUniqueInput]
  set: [DirectionWhereUniqueInput]
  update: [DirectionUpdateWithWhereUniqueWithoutSpecializationInput]
  updateMany: [DirectionUpdateManyWithWhereWithoutSpecializationInput]
  upsert: [DirectionUpsertWithWhereUniqueWithoutSpecializationInput]
}

input DirectionUpdateManyWithoutTestNestedInput {
  connect: [DirectionWhereUniqueInput]
  connectOrCreate: [DirectionCreateOrConnectWithoutTestInput]
  create: [DirectionCreateWithoutTestInput]
  createMany: DirectionCreateManyTestInputEnvelope
  delete: [DirectionWhereUniqueInput]
  deleteMany: [DirectionScalarWhereInput]
  disconnect: [DirectionWhereUniqueInput]
  set: [DirectionWhereUniqueInput]
  update: [DirectionUpdateWithWhereUniqueWithoutTestInput]
  updateMany: [DirectionUpdateManyWithWhereWithoutTestInput]
  upsert: [DirectionUpsertWithWhereUniqueWithoutTestInput]
}

input DirectionUpdateOneRequiredWithoutResponsesNestedInput {
  connect: DirectionWhereUniqueInput
  connectOrCreate: DirectionCreateOrConnectWithoutResponsesInput
  create: DirectionCreateWithoutResponsesInput
  update: DirectionUpdateToOneWithWhereWithoutResponsesInput
  upsert: DirectionUpsertWithoutResponsesInput
}

input DirectionUpdateToOneWithWhereWithoutResponsesInput {
  data: DirectionUpdateWithoutResponsesInput!
  where: DirectionWhereInput
}

input DirectionUpdateWithWhereUniqueWithoutSpecializationInput {
  data: DirectionUpdateWithoutSpecializationInput!
  where: DirectionWhereUniqueInput!
}

input DirectionUpdateWithWhereUniqueWithoutTestInput {
  data: DirectionUpdateWithoutTestInput!
  where: DirectionWhereUniqueInput!
}

input DirectionUpdateWithoutResponsesInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  specialization: SpecializationUpdateOneRequiredWithoutDirectionsNestedInput
  test: TestUpdateOneWithoutDirectionNestedInput
  title: StringFieldUpdateOperationsInput
  type: NullableEnumDirectionTypeFieldUpdateOperationsInput
}

input DirectionUpdateWithoutSpecializationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  responses: ResponseUpdateManyWithoutDirectionNestedInput
  test: TestUpdateOneWithoutDirectionNestedInput
  title: StringFieldUpdateOperationsInput
  type: NullableEnumDirectionTypeFieldUpdateOperationsInput
}

input DirectionUpdateWithoutTestInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  responses: ResponseUpdateManyWithoutDirectionNestedInput
  specialization: SpecializationUpdateOneRequiredWithoutDirectionsNestedInput
  title: StringFieldUpdateOperationsInput
  type: NullableEnumDirectionTypeFieldUpdateOperationsInput
}

input DirectionUpsertWithWhereUniqueWithoutSpecializationInput {
  create: DirectionCreateWithoutSpecializationInput!
  update: DirectionUpdateWithoutSpecializationInput!
  where: DirectionWhereUniqueInput!
}

input DirectionUpsertWithWhereUniqueWithoutTestInput {
  create: DirectionCreateWithoutTestInput!
  update: DirectionUpdateWithoutTestInput!
  where: DirectionWhereUniqueInput!
}

input DirectionUpsertWithoutResponsesInput {
  create: DirectionCreateWithoutResponsesInput!
  update: DirectionUpdateWithoutResponsesInput!
  where: DirectionWhereInput
}

input DirectionWhereInput {
  AND: [DirectionWhereInput]
  NOT: [DirectionWhereInput]
  OR: [DirectionWhereInput]
  createdAt: DateTimeFilter
  description: StringFilter
  id: IntFilter
  responses: ResponseListRelationFilter
  specialization: SpecializationRelationFilter
  specializationId: IntFilter
  test: TestNullableRelationFilter
  testId: IntNullableFilter
  title: StringFilter
  type: EnumDirectionTypeNullableFilter
}

input DirectionWhereUniqueInput {
  AND: [DirectionWhereInput]
  NOT: [DirectionWhereInput]
  OR: [DirectionWhereInput]
  createdAt: DateTimeFilter
  description: StringFilter
  id: Int
  responses: ResponseListRelationFilter
  specialization: SpecializationRelationFilter
  specializationId: IntFilter
  test: TestNullableRelationFilter
  testId: IntNullableFilter
  title: StringFilter
  type: EnumDirectionTypeNullableFilter
}

type Enum {
  fields: [String!]!
  name: String!
}

input EnumDirectionTypeNullableFilter {
  equals: DirectionType
  in: [DirectionType]
  not: NestedEnumDirectionTypeNullableFilter
  notIn: [DirectionType]
}

input EnumDirectionTypeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedEnumDirectionTypeNullableFilter
  _min: NestedEnumDirectionTypeNullableFilter
  equals: DirectionType
  in: [DirectionType]
  not: NestedEnumDirectionTypeNullableWithAggregatesFilter
  notIn: [DirectionType]
}

input EnumTaskTypeFieldUpdateOperationsInput {
  set: TaskType
}

input EnumTaskTypeFilter {
  equals: TaskType
  in: [TaskType]
  not: NestedEnumTaskTypeFilter
  notIn: [TaskType]
}

input EnumTaskTypeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumTaskTypeFilter
  _min: NestedEnumTaskTypeFilter
  equals: TaskType
  in: [TaskType]
  not: NestedEnumTaskTypeWithAggregatesFilter
  notIn: [TaskType]
}

input EnumUserRoleEnumFieldUpdateOperationsInput {
  set: UserRoleEnum
}

input EnumUserRoleEnumFilter {
  equals: UserRoleEnum
  in: [UserRoleEnum]
  not: NestedEnumUserRoleEnumFilter
  notIn: [UserRoleEnum]
}

input EnumUserRoleEnumWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumUserRoleEnumFilter
  _min: NestedEnumUserRoleEnumFilter
  equals: UserRoleEnum
  in: [UserRoleEnum]
  not: NestedEnumUserRoleEnumWithAggregatesFilter
  notIn: [UserRoleEnum]
}

type Field {
  create: Boolean!
  editor: Boolean!
  filter: Boolean!
  id: String!
  isId: Boolean!
  kind: KindEnum!
  list: Boolean!
  name: String!
  order: Int!
  read: Boolean!
  relationField: Boolean
  required: Boolean!
  sort: Boolean!
  title: String!
  type: String!
  unique: Boolean!
  update: Boolean!
  upload: Boolean!
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int]
}

input IntNullableListFilter {
  equals: [Int]
  has: Int
  hasEvery: [Int]
  hasSome: [Int]
  isEmpty: Boolean
}

input IntNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedIntNullableFilter
  _min: NestedIntNullableFilter
  _sum: NestedIntNullableFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntNullableWithAggregatesFilter
  notIn: [Int]
}

input IntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int]
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

enum KindEnum {
  enum
  object
  scalar
}

type Message {
  createdAt: DateTime!
  files: [String!]!
  group: MessagerGroup!
  groupId: Int!
  id: Int!
  sender: User!
  senderId: Int!
  text: String!
}

type MessageAvgAggregateOutputType {
  groupId: Float
  id: Float
  senderId: Float
}

input MessageAvgOrderByAggregateInput {
  groupId: SortOrder
  id: SortOrder
  senderId: SortOrder
}

type MessageCountAggregateOutputType {
  _all: Int!
  createdAt: Int!
  files: Int!
  groupId: Int!
  id: Int!
  senderId: Int!
  text: Int!
}

input MessageCountOrderByAggregateInput {
  createdAt: SortOrder
  files: SortOrder
  groupId: SortOrder
  id: SortOrder
  senderId: SortOrder
  text: SortOrder
}

input MessageCreateInput {
  createdAt: DateTime
  files: [String]
  group: MessagerGroupCreateNestedOneWithoutMessagesInput!
  sender: UserCreateNestedOneWithoutMessagesInput!
  text: String!
}

input MessageCreateManyGroupInput {
  createdAt: DateTime
  files: [String]
  id: Int
  senderId: Int!
  text: String!
}

input MessageCreateManyGroupInputEnvelope {
  data: MessageCreateManyGroupInput!
  skipDuplicates: Boolean
}

input MessageCreateManyInput {
  createdAt: DateTime
  files: [String]
  groupId: Int!
  id: Int
  senderId: Int!
  text: String!
}

input MessageCreateManySenderInput {
  createdAt: DateTime
  files: [String]
  groupId: Int!
  id: Int
  text: String!
}

input MessageCreateManySenderInputEnvelope {
  data: MessageCreateManySenderInput!
  skipDuplicates: Boolean
}

input MessageCreateNestedManyWithoutGroupInput {
  connect: [MessageWhereUniqueInput]
  connectOrCreate: [MessageCreateOrConnectWithoutGroupInput]
  create: [MessageCreateWithoutGroupInput]
  createMany: MessageCreateManyGroupInputEnvelope
}

input MessageCreateNestedManyWithoutSenderInput {
  connect: [MessageWhereUniqueInput]
  connectOrCreate: [MessageCreateOrConnectWithoutSenderInput]
  create: [MessageCreateWithoutSenderInput]
  createMany: MessageCreateManySenderInputEnvelope
}

input MessageCreateOrConnectWithoutGroupInput {
  create: MessageCreateWithoutGroupInput!
  where: MessageWhereUniqueInput!
}

input MessageCreateOrConnectWithoutSenderInput {
  create: MessageCreateWithoutSenderInput!
  where: MessageWhereUniqueInput!
}

input MessageCreateWithoutGroupInput {
  createdAt: DateTime
  files: [String]
  sender: UserCreateNestedOneWithoutMessagesInput!
  text: String!
}

input MessageCreateWithoutSenderInput {
  createdAt: DateTime
  files: [String]
  group: MessagerGroupCreateNestedOneWithoutMessagesInput!
  text: String!
}

input MessageCreatefilesInput {
  set: String!
}

input MessageListRelationFilter {
  every: MessageWhereInput
  none: MessageWhereInput
  some: MessageWhereInput
}

type MessageMaxAggregateOutputType {
  createdAt: DateTime
  groupId: Int
  id: Int
  senderId: Int
  text: String
}

input MessageMaxOrderByAggregateInput {
  createdAt: SortOrder
  groupId: SortOrder
  id: SortOrder
  senderId: SortOrder
  text: SortOrder
}

type MessageMinAggregateOutputType {
  createdAt: DateTime
  groupId: Int
  id: Int
  senderId: Int
  text: String
}

input MessageMinOrderByAggregateInput {
  createdAt: SortOrder
  groupId: SortOrder
  id: SortOrder
  senderId: SortOrder
  text: SortOrder
}

input MessageOrderByRelationAggregateInput {
  _count: SortOrder
}

input MessageOrderByWithAggregationInput {
  _avg: MessageAvgOrderByAggregateInput
  _count: MessageCountOrderByAggregateInput
  _max: MessageMaxOrderByAggregateInput
  _min: MessageMinOrderByAggregateInput
  _sum: MessageSumOrderByAggregateInput
  createdAt: SortOrder
  files: SortOrder
  groupId: SortOrder
  id: SortOrder
  senderId: SortOrder
  text: SortOrder
}

input MessageOrderByWithRelationInput {
  createdAt: SortOrder
  files: SortOrder
  group: MessagerGroupOrderByWithRelationInput
  groupId: SortOrder
  id: SortOrder
  sender: UserOrderByWithRelationInput
  senderId: SortOrder
  text: SortOrder
}

enum MessageScalarFieldEnum {
  createdAt
  files
  groupId
  id
  senderId
  text
}

input MessageScalarWhereInput {
  AND: [MessageScalarWhereInput]
  NOT: [MessageScalarWhereInput]
  OR: [MessageScalarWhereInput]
  createdAt: DateTimeFilter
  files: StringNullableListFilter
  groupId: IntFilter
  id: IntFilter
  senderId: IntFilter
  text: StringFilter
}

input MessageScalarWhereWithAggregatesInput {
  AND: [MessageScalarWhereWithAggregatesInput]
  NOT: [MessageScalarWhereWithAggregatesInput]
  OR: [MessageScalarWhereWithAggregatesInput]
  createdAt: DateTimeWithAggregatesFilter
  files: StringNullableListFilter
  groupId: IntWithAggregatesFilter
  id: IntWithAggregatesFilter
  senderId: IntWithAggregatesFilter
  text: StringWithAggregatesFilter
}

type MessageSumAggregateOutputType {
  groupId: Int
  id: Int
  senderId: Int
}

input MessageSumOrderByAggregateInput {
  groupId: SortOrder
  id: SortOrder
  senderId: SortOrder
}

input MessageUncheckedCreateInput {
  createdAt: DateTime
  files: [String]
  groupId: Int!
  id: Int
  senderId: Int!
  text: String!
}

input MessageUncheckedCreateNestedManyWithoutGroupInput {
  connect: [MessageWhereUniqueInput]
  connectOrCreate: [MessageCreateOrConnectWithoutGroupInput]
  create: [MessageCreateWithoutGroupInput]
  createMany: MessageCreateManyGroupInputEnvelope
}

input MessageUncheckedCreateNestedManyWithoutSenderInput {
  connect: [MessageWhereUniqueInput]
  connectOrCreate: [MessageCreateOrConnectWithoutSenderInput]
  create: [MessageCreateWithoutSenderInput]
  createMany: MessageCreateManySenderInputEnvelope
}

input MessageUncheckedCreateWithoutGroupInput {
  createdAt: DateTime
  files: [String]
  id: Int
  senderId: Int!
  text: String!
}

input MessageUncheckedCreateWithoutSenderInput {
  createdAt: DateTime
  files: [String]
  groupId: Int!
  id: Int
  text: String!
}

input MessageUncheckedUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  files: [String]
  groupId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  senderId: IntFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
}

input MessageUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  files: [String]
  groupId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  senderId: IntFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
}

input MessageUncheckedUpdateManyWithoutGroupInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  files: [String]
  id: IntFieldUpdateOperationsInput
  senderId: IntFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
}

input MessageUncheckedUpdateManyWithoutGroupNestedInput {
  connect: [MessageWhereUniqueInput]
  connectOrCreate: [MessageCreateOrConnectWithoutGroupInput]
  create: [MessageCreateWithoutGroupInput]
  createMany: MessageCreateManyGroupInputEnvelope
  delete: [MessageWhereUniqueInput]
  deleteMany: [MessageScalarWhereInput]
  disconnect: [MessageWhereUniqueInput]
  set: [MessageWhereUniqueInput]
  update: [MessageUpdateWithWhereUniqueWithoutGroupInput]
  updateMany: [MessageUpdateManyWithWhereWithoutGroupInput]
  upsert: [MessageUpsertWithWhereUniqueWithoutGroupInput]
}

input MessageUncheckedUpdateManyWithoutSenderInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  files: [String]
  groupId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
}

input MessageUncheckedUpdateManyWithoutSenderNestedInput {
  connect: [MessageWhereUniqueInput]
  connectOrCreate: [MessageCreateOrConnectWithoutSenderInput]
  create: [MessageCreateWithoutSenderInput]
  createMany: MessageCreateManySenderInputEnvelope
  delete: [MessageWhereUniqueInput]
  deleteMany: [MessageScalarWhereInput]
  disconnect: [MessageWhereUniqueInput]
  set: [MessageWhereUniqueInput]
  update: [MessageUpdateWithWhereUniqueWithoutSenderInput]
  updateMany: [MessageUpdateManyWithWhereWithoutSenderInput]
  upsert: [MessageUpsertWithWhereUniqueWithoutSenderInput]
}

input MessageUncheckedUpdateWithoutGroupInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  files: [String]
  id: IntFieldUpdateOperationsInput
  senderId: IntFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
}

input MessageUncheckedUpdateWithoutSenderInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  files: [String]
  groupId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
}

input MessageUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  files: [String]
  group: MessagerGroupUpdateOneRequiredWithoutMessagesNestedInput
  sender: UserUpdateOneRequiredWithoutMessagesNestedInput
  text: StringFieldUpdateOperationsInput
}

input MessageUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  files: [String]
  text: StringFieldUpdateOperationsInput
}

input MessageUpdateManyWithWhereWithoutGroupInput {
  data: MessageUpdateManyMutationInput!
  where: MessageScalarWhereInput!
}

input MessageUpdateManyWithWhereWithoutSenderInput {
  data: MessageUpdateManyMutationInput!
  where: MessageScalarWhereInput!
}

input MessageUpdateManyWithoutGroupNestedInput {
  connect: [MessageWhereUniqueInput]
  connectOrCreate: [MessageCreateOrConnectWithoutGroupInput]
  create: [MessageCreateWithoutGroupInput]
  createMany: MessageCreateManyGroupInputEnvelope
  delete: [MessageWhereUniqueInput]
  deleteMany: [MessageScalarWhereInput]
  disconnect: [MessageWhereUniqueInput]
  set: [MessageWhereUniqueInput]
  update: [MessageUpdateWithWhereUniqueWithoutGroupInput]
  updateMany: [MessageUpdateManyWithWhereWithoutGroupInput]
  upsert: [MessageUpsertWithWhereUniqueWithoutGroupInput]
}

input MessageUpdateManyWithoutSenderNestedInput {
  connect: [MessageWhereUniqueInput]
  connectOrCreate: [MessageCreateOrConnectWithoutSenderInput]
  create: [MessageCreateWithoutSenderInput]
  createMany: MessageCreateManySenderInputEnvelope
  delete: [MessageWhereUniqueInput]
  deleteMany: [MessageScalarWhereInput]
  disconnect: [MessageWhereUniqueInput]
  set: [MessageWhereUniqueInput]
  update: [MessageUpdateWithWhereUniqueWithoutSenderInput]
  updateMany: [MessageUpdateManyWithWhereWithoutSenderInput]
  upsert: [MessageUpsertWithWhereUniqueWithoutSenderInput]
}

input MessageUpdateWithWhereUniqueWithoutGroupInput {
  data: MessageUpdateWithoutGroupInput!
  where: MessageWhereUniqueInput!
}

input MessageUpdateWithWhereUniqueWithoutSenderInput {
  data: MessageUpdateWithoutSenderInput!
  where: MessageWhereUniqueInput!
}

input MessageUpdateWithoutGroupInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  files: [String]
  sender: UserUpdateOneRequiredWithoutMessagesNestedInput
  text: StringFieldUpdateOperationsInput
}

input MessageUpdateWithoutSenderInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  files: [String]
  group: MessagerGroupUpdateOneRequiredWithoutMessagesNestedInput
  text: StringFieldUpdateOperationsInput
}

input MessageUpdatefilesInput {
  push: [String]
  set: [String]
}

input MessageUpsertWithWhereUniqueWithoutGroupInput {
  create: MessageCreateWithoutGroupInput!
  update: MessageUpdateWithoutGroupInput!
  where: MessageWhereUniqueInput!
}

input MessageUpsertWithWhereUniqueWithoutSenderInput {
  create: MessageCreateWithoutSenderInput!
  update: MessageUpdateWithoutSenderInput!
  where: MessageWhereUniqueInput!
}

input MessageWhereInput {
  AND: [MessageWhereInput]
  NOT: [MessageWhereInput]
  OR: [MessageWhereInput]
  createdAt: DateTimeFilter
  files: StringNullableListFilter
  group: MessagerGroupRelationFilter
  groupId: IntFilter
  id: IntFilter
  sender: UserRelationFilter
  senderId: IntFilter
  text: StringFilter
}

input MessageWhereUniqueInput {
  AND: [MessageWhereInput]
  NOT: [MessageWhereInput]
  OR: [MessageWhereInput]
  createdAt: DateTimeFilter
  files: StringNullableListFilter
  group: MessagerGroupRelationFilter
  groupId: IntFilter
  id: Int
  sender: UserRelationFilter
  senderId: IntFilter
  text: StringFilter
}

type MessagerGroup {
  _count: MessagerGroupCountOutputType!
  active: Boolean!
  createdAt: DateTime!
  creatorId: Int
  icon: String!
  id: Int!
  messages(cursor: MessageWhereUniqueInput, distinct: [MessageScalarFieldEnum], orderBy: [MessageOrderByWithRelationInput], skip: Int, take: Int, where: MessageWhereInput): [Message!]!
  title: String!
  users(cursor: UserWhereUniqueInput, distinct: [UserScalarFieldEnum], orderBy: [UserOrderByWithRelationInput], skip: Int, take: Int, where: UserWhereInput): [User!]!
}

type MessagerGroupAvgAggregateOutputType {
  creatorId: Float
  id: Float
}

input MessagerGroupAvgOrderByAggregateInput {
  creatorId: SortOrder
  id: SortOrder
}

type MessagerGroupCountAggregateOutputType {
  _all: Int!
  active: Int!
  createdAt: Int!
  creatorId: Int!
  icon: Int!
  id: Int!
  title: Int!
}

input MessagerGroupCountOrderByAggregateInput {
  active: SortOrder
  createdAt: SortOrder
  creatorId: SortOrder
  icon: SortOrder
  id: SortOrder
  title: SortOrder
}

type MessagerGroupCountOutputType {
  messages: Int!
  users: Int!
}

input MessagerGroupCreateInput {
  active: Boolean
  createdAt: DateTime
  creatorId: Int
  icon: String
  messages: MessageCreateNestedManyWithoutGroupInput
  title: String
  users: UserCreateNestedManyWithoutGroupsInput
}

input MessagerGroupCreateManyInput {
  active: Boolean
  createdAt: DateTime
  creatorId: Int
  icon: String
  id: Int
  title: String
}

input MessagerGroupCreateNestedManyWithoutUsersInput {
  connect: [MessagerGroupWhereUniqueInput]
  connectOrCreate: [MessagerGroupCreateOrConnectWithoutUsersInput]
  create: [MessagerGroupCreateWithoutUsersInput]
}

input MessagerGroupCreateNestedOneWithoutMessagesInput {
  connect: MessagerGroupWhereUniqueInput
  connectOrCreate: MessagerGroupCreateOrConnectWithoutMessagesInput
  create: MessagerGroupCreateWithoutMessagesInput
}

input MessagerGroupCreateOrConnectWithoutMessagesInput {
  create: MessagerGroupCreateWithoutMessagesInput!
  where: MessagerGroupWhereUniqueInput!
}

input MessagerGroupCreateOrConnectWithoutUsersInput {
  create: MessagerGroupCreateWithoutUsersInput!
  where: MessagerGroupWhereUniqueInput!
}

input MessagerGroupCreateWithoutMessagesInput {
  active: Boolean
  createdAt: DateTime
  creatorId: Int
  icon: String
  title: String
  users: UserCreateNestedManyWithoutGroupsInput
}

input MessagerGroupCreateWithoutUsersInput {
  active: Boolean
  createdAt: DateTime
  creatorId: Int
  icon: String
  messages: MessageCreateNestedManyWithoutGroupInput
  title: String
}

input MessagerGroupListRelationFilter {
  every: MessagerGroupWhereInput
  none: MessagerGroupWhereInput
  some: MessagerGroupWhereInput
}

type MessagerGroupMaxAggregateOutputType {
  active: Boolean
  createdAt: DateTime
  creatorId: Int
  icon: String
  id: Int
  title: String
}

input MessagerGroupMaxOrderByAggregateInput {
  active: SortOrder
  createdAt: SortOrder
  creatorId: SortOrder
  icon: SortOrder
  id: SortOrder
  title: SortOrder
}

type MessagerGroupMinAggregateOutputType {
  active: Boolean
  createdAt: DateTime
  creatorId: Int
  icon: String
  id: Int
  title: String
}

input MessagerGroupMinOrderByAggregateInput {
  active: SortOrder
  createdAt: SortOrder
  creatorId: SortOrder
  icon: SortOrder
  id: SortOrder
  title: SortOrder
}

input MessagerGroupOrderByRelationAggregateInput {
  _count: SortOrder
}

input MessagerGroupOrderByWithAggregationInput {
  _avg: MessagerGroupAvgOrderByAggregateInput
  _count: MessagerGroupCountOrderByAggregateInput
  _max: MessagerGroupMaxOrderByAggregateInput
  _min: MessagerGroupMinOrderByAggregateInput
  _sum: MessagerGroupSumOrderByAggregateInput
  active: SortOrder
  createdAt: SortOrder
  creatorId: SortOrderInput
  icon: SortOrder
  id: SortOrder
  title: SortOrder
}

input MessagerGroupOrderByWithRelationInput {
  active: SortOrder
  createdAt: SortOrder
  creatorId: SortOrderInput
  icon: SortOrder
  id: SortOrder
  messages: MessageOrderByRelationAggregateInput
  title: SortOrder
  users: UserOrderByRelationAggregateInput
}

input MessagerGroupRelationFilter {
  is: MessagerGroupWhereInput
  isNot: MessagerGroupWhereInput
}

enum MessagerGroupScalarFieldEnum {
  active
  createdAt
  creatorId
  icon
  id
  title
}

input MessagerGroupScalarWhereInput {
  AND: [MessagerGroupScalarWhereInput]
  NOT: [MessagerGroupScalarWhereInput]
  OR: [MessagerGroupScalarWhereInput]
  active: BoolFilter
  createdAt: DateTimeFilter
  creatorId: IntNullableFilter
  icon: StringFilter
  id: IntFilter
  title: StringFilter
}

input MessagerGroupScalarWhereWithAggregatesInput {
  AND: [MessagerGroupScalarWhereWithAggregatesInput]
  NOT: [MessagerGroupScalarWhereWithAggregatesInput]
  OR: [MessagerGroupScalarWhereWithAggregatesInput]
  active: BoolWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  creatorId: IntNullableWithAggregatesFilter
  icon: StringWithAggregatesFilter
  id: IntWithAggregatesFilter
  title: StringWithAggregatesFilter
}

type MessagerGroupSumAggregateOutputType {
  creatorId: Int
  id: Int
}

input MessagerGroupSumOrderByAggregateInput {
  creatorId: SortOrder
  id: SortOrder
}

input MessagerGroupUncheckedCreateInput {
  active: Boolean
  createdAt: DateTime
  creatorId: Int
  icon: String
  id: Int
  messages: MessageUncheckedCreateNestedManyWithoutGroupInput
  title: String
  users: UserUncheckedCreateNestedManyWithoutGroupsInput
}

input MessagerGroupUncheckedCreateNestedManyWithoutUsersInput {
  connect: [MessagerGroupWhereUniqueInput]
  connectOrCreate: [MessagerGroupCreateOrConnectWithoutUsersInput]
  create: [MessagerGroupCreateWithoutUsersInput]
}

input MessagerGroupUncheckedCreateWithoutMessagesInput {
  active: Boolean
  createdAt: DateTime
  creatorId: Int
  icon: String
  id: Int
  title: String
  users: UserUncheckedCreateNestedManyWithoutGroupsInput
}

input MessagerGroupUncheckedCreateWithoutUsersInput {
  active: Boolean
  createdAt: DateTime
  creatorId: Int
  icon: String
  id: Int
  messages: MessageUncheckedCreateNestedManyWithoutGroupInput
  title: String
}

input MessagerGroupUncheckedUpdateInput {
  active: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creatorId: NullableIntFieldUpdateOperationsInput
  icon: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  messages: MessageUncheckedUpdateManyWithoutGroupNestedInput
  title: StringFieldUpdateOperationsInput
  users: UserUncheckedUpdateManyWithoutGroupsNestedInput
}

input MessagerGroupUncheckedUpdateManyInput {
  active: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creatorId: NullableIntFieldUpdateOperationsInput
  icon: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input MessagerGroupUncheckedUpdateManyWithoutUsersInput {
  active: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creatorId: NullableIntFieldUpdateOperationsInput
  icon: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input MessagerGroupUncheckedUpdateManyWithoutUsersNestedInput {
  connect: [MessagerGroupWhereUniqueInput]
  connectOrCreate: [MessagerGroupCreateOrConnectWithoutUsersInput]
  create: [MessagerGroupCreateWithoutUsersInput]
  delete: [MessagerGroupWhereUniqueInput]
  deleteMany: [MessagerGroupScalarWhereInput]
  disconnect: [MessagerGroupWhereUniqueInput]
  set: [MessagerGroupWhereUniqueInput]
  update: [MessagerGroupUpdateWithWhereUniqueWithoutUsersInput]
  updateMany: [MessagerGroupUpdateManyWithWhereWithoutUsersInput]
  upsert: [MessagerGroupUpsertWithWhereUniqueWithoutUsersInput]
}

input MessagerGroupUncheckedUpdateWithoutMessagesInput {
  active: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creatorId: NullableIntFieldUpdateOperationsInput
  icon: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  users: UserUncheckedUpdateManyWithoutGroupsNestedInput
}

input MessagerGroupUncheckedUpdateWithoutUsersInput {
  active: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creatorId: NullableIntFieldUpdateOperationsInput
  icon: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  messages: MessageUncheckedUpdateManyWithoutGroupNestedInput
  title: StringFieldUpdateOperationsInput
}

input MessagerGroupUpdateInput {
  active: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creatorId: NullableIntFieldUpdateOperationsInput
  icon: StringFieldUpdateOperationsInput
  messages: MessageUpdateManyWithoutGroupNestedInput
  title: StringFieldUpdateOperationsInput
  users: UserUpdateManyWithoutGroupsNestedInput
}

input MessagerGroupUpdateManyMutationInput {
  active: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creatorId: NullableIntFieldUpdateOperationsInput
  icon: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input MessagerGroupUpdateManyWithWhereWithoutUsersInput {
  data: MessagerGroupUpdateManyMutationInput!
  where: MessagerGroupScalarWhereInput!
}

input MessagerGroupUpdateManyWithoutUsersNestedInput {
  connect: [MessagerGroupWhereUniqueInput]
  connectOrCreate: [MessagerGroupCreateOrConnectWithoutUsersInput]
  create: [MessagerGroupCreateWithoutUsersInput]
  delete: [MessagerGroupWhereUniqueInput]
  deleteMany: [MessagerGroupScalarWhereInput]
  disconnect: [MessagerGroupWhereUniqueInput]
  set: [MessagerGroupWhereUniqueInput]
  update: [MessagerGroupUpdateWithWhereUniqueWithoutUsersInput]
  updateMany: [MessagerGroupUpdateManyWithWhereWithoutUsersInput]
  upsert: [MessagerGroupUpsertWithWhereUniqueWithoutUsersInput]
}

input MessagerGroupUpdateOneRequiredWithoutMessagesNestedInput {
  connect: MessagerGroupWhereUniqueInput
  connectOrCreate: MessagerGroupCreateOrConnectWithoutMessagesInput
  create: MessagerGroupCreateWithoutMessagesInput
  update: MessagerGroupUpdateToOneWithWhereWithoutMessagesInput
  upsert: MessagerGroupUpsertWithoutMessagesInput
}

input MessagerGroupUpdateToOneWithWhereWithoutMessagesInput {
  data: MessagerGroupUpdateWithoutMessagesInput!
  where: MessagerGroupWhereInput
}

input MessagerGroupUpdateWithWhereUniqueWithoutUsersInput {
  data: MessagerGroupUpdateWithoutUsersInput!
  where: MessagerGroupWhereUniqueInput!
}

input MessagerGroupUpdateWithoutMessagesInput {
  active: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creatorId: NullableIntFieldUpdateOperationsInput
  icon: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  users: UserUpdateManyWithoutGroupsNestedInput
}

input MessagerGroupUpdateWithoutUsersInput {
  active: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creatorId: NullableIntFieldUpdateOperationsInput
  icon: StringFieldUpdateOperationsInput
  messages: MessageUpdateManyWithoutGroupNestedInput
  title: StringFieldUpdateOperationsInput
}

input MessagerGroupUpsertWithWhereUniqueWithoutUsersInput {
  create: MessagerGroupCreateWithoutUsersInput!
  update: MessagerGroupUpdateWithoutUsersInput!
  where: MessagerGroupWhereUniqueInput!
}

input MessagerGroupUpsertWithoutMessagesInput {
  create: MessagerGroupCreateWithoutMessagesInput!
  update: MessagerGroupUpdateWithoutMessagesInput!
  where: MessagerGroupWhereInput
}

input MessagerGroupWhereInput {
  AND: [MessagerGroupWhereInput]
  NOT: [MessagerGroupWhereInput]
  OR: [MessagerGroupWhereInput]
  active: BoolFilter
  createdAt: DateTimeFilter
  creatorId: IntNullableFilter
  icon: StringFilter
  id: IntFilter
  messages: MessageListRelationFilter
  title: StringFilter
  users: UserListRelationFilter
}

input MessagerGroupWhereUniqueInput {
  AND: [MessagerGroupWhereInput]
  NOT: [MessagerGroupWhereInput]
  OR: [MessagerGroupWhereInput]
  active: BoolFilter
  createdAt: DateTimeFilter
  creatorId: IntNullableFilter
  icon: StringFilter
  id: Int
  messages: MessageListRelationFilter
  title: StringFilter
  users: UserListRelationFilter
}

type Model {
  create: Boolean!
  delete: Boolean!
  displayFields: [String!]!
  fields: [Field!]!
  id: String!
  idField: String!
  name: String!
  update: Boolean!
}

type Mutation {
  createOneAnswer(data: AnswerCreateInput!): Answer!
  createOneDirection(data: DirectionCreateInput!): Direction!
  createOneMessage(data: MessageCreateInput!): Message!
  createOneMessagerGroup(data: MessagerGroupCreateInput): MessagerGroup!
  createOneResponse(data: ResponseCreateInput!): Response!
  createOneSpecialization(data: SpecializationCreateInput!): Specialization!
  createOneTask(data: TaskCreateInput!): Task!
  createOneTaskAnswer(data: TaskAnswerCreateInput!): TaskAnswer!
  createOneTest(data: TestCreateInput!): Test!
  createOneUser(data: UserCreateInput!): User!
  deleteManyAnswer(where: AnswerWhereInput): BatchPayload!
  deleteManyDirection(where: DirectionWhereInput): BatchPayload!
  deleteManyMessage(where: MessageWhereInput): BatchPayload!
  deleteManyMessagerGroup(where: MessagerGroupWhereInput): BatchPayload!
  deleteManyResponse(where: ResponseWhereInput): BatchPayload!
  deleteManySpecialization(where: SpecializationWhereInput): BatchPayload!
  deleteManyTask(where: TaskWhereInput): BatchPayload!
  deleteManyTaskAnswer(where: TaskAnswerWhereInput): BatchPayload!
  deleteManyTest(where: TestWhereInput): BatchPayload!
  deleteManyUser(where: UserWhereInput): BatchPayload!
  deleteOneAnswer(where: AnswerWhereUniqueInput!): Answer
  deleteOneDirection(where: DirectionWhereUniqueInput!): Direction
  deleteOneMessage(where: MessageWhereUniqueInput!): Message
  deleteOneMessagerGroup(where: MessagerGroupWhereUniqueInput!): MessagerGroup
  deleteOneResponse(where: ResponseWhereUniqueInput!): Response
  deleteOneSpecialization(where: SpecializationWhereUniqueInput!): Specialization
  deleteOneTask(where: TaskWhereUniqueInput!): Task
  deleteOneTaskAnswer(where: TaskAnswerWhereUniqueInput!): TaskAnswer
  deleteOneTest(where: TestWhereUniqueInput!): Test
  deleteOneUser(where: UserWhereUniqueInput!): User
  login(email: String!, password: String!): User
  logout: Boolean
  signup(email: String!, name: String, password: String!): User
  updateField(data: UpdateFieldInput!, id: String!, modelId: String!): Field!
  updateManyAnswer(data: AnswerUpdateManyMutationInput!, where: AnswerWhereInput): BatchPayload!
  updateManyDirection(data: DirectionUpdateManyMutationInput!, where: DirectionWhereInput): BatchPayload!
  updateManyMessage(data: MessageUpdateManyMutationInput!, where: MessageWhereInput): BatchPayload!
  updateManyMessagerGroup(data: MessagerGroupUpdateManyMutationInput!, where: MessagerGroupWhereInput): BatchPayload!
  updateManyResponse(data: ResponseUpdateManyMutationInput!, where: ResponseWhereInput): BatchPayload!
  updateManySpecialization(data: SpecializationUpdateManyMutationInput!, where: SpecializationWhereInput): BatchPayload!
  updateManyTask(data: TaskUpdateManyMutationInput!, where: TaskWhereInput): BatchPayload!
  updateManyTaskAnswer(data: TaskAnswerUpdateManyMutationInput!, where: TaskAnswerWhereInput): BatchPayload!
  updateManyTest(data: TestUpdateManyMutationInput!, where: TestWhereInput): BatchPayload!
  updateManyUser(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  updateModel(data: UpdateModelInput!, id: String!): Model!
  updateOneAnswer(data: AnswerUpdateInput!, where: AnswerWhereUniqueInput!): Answer!
  updateOneDirection(data: DirectionUpdateInput!, where: DirectionWhereUniqueInput!): Direction!
  updateOneMessage(data: MessageUpdateInput!, where: MessageWhereUniqueInput!): Message!
  updateOneMessagerGroup(data: MessagerGroupUpdateInput!, where: MessagerGroupWhereUniqueInput!): MessagerGroup!
  updateOneResponse(data: ResponseUpdateInput!, where: ResponseWhereUniqueInput!): Response!
  updateOneSpecialization(data: SpecializationUpdateInput!, where: SpecializationWhereUniqueInput!): Specialization!
  updateOneTask(data: TaskUpdateInput!, where: TaskWhereUniqueInput!): Task!
  updateOneTaskAnswer(data: TaskAnswerUpdateInput!, where: TaskAnswerWhereUniqueInput!): TaskAnswer!
  updateOneTest(data: TestUpdateInput!, where: TestWhereUniqueInput!): Test!
  updateOneUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User!
  updatePassword(currentPassword: String!, password: String!): Boolean
  upsertOneAnswer(create: AnswerCreateInput!, update: AnswerUpdateInput!, where: AnswerWhereUniqueInput!): Answer!
  upsertOneDirection(create: DirectionCreateInput!, update: DirectionUpdateInput!, where: DirectionWhereUniqueInput!): Direction!
  upsertOneMessage(create: MessageCreateInput!, update: MessageUpdateInput!, where: MessageWhereUniqueInput!): Message!
  upsertOneMessagerGroup(create: MessagerGroupCreateInput!, update: MessagerGroupUpdateInput!, where: MessagerGroupWhereUniqueInput!): MessagerGroup!
  upsertOneResponse(create: ResponseCreateInput!, update: ResponseUpdateInput!, where: ResponseWhereUniqueInput!): Response!
  upsertOneSpecialization(create: SpecializationCreateInput!, update: SpecializationUpdateInput!, where: SpecializationWhereUniqueInput!): Specialization!
  upsertOneTask(create: TaskCreateInput!, update: TaskUpdateInput!, where: TaskWhereUniqueInput!): Task!
  upsertOneTaskAnswer(create: TaskAnswerCreateInput!, update: TaskAnswerUpdateInput!, where: TaskAnswerWhereUniqueInput!): TaskAnswer!
  upsertOneTest(create: TestCreateInput!, update: TestUpdateInput!, where: TestWhereUniqueInput!): Test!
  upsertOneUser(create: UserCreateInput!, update: UserUpdateInput!, where: UserWhereUniqueInput!): User!
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime]
}

input NestedDateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTime]
}

input NestedEnumDirectionTypeNullableFilter {
  equals: DirectionType
  in: [DirectionType]
  not: NestedEnumDirectionTypeNullableFilter
  notIn: [DirectionType]
}

input NestedEnumDirectionTypeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedEnumDirectionTypeNullableFilter
  _min: NestedEnumDirectionTypeNullableFilter
  equals: DirectionType
  in: [DirectionType]
  not: NestedEnumDirectionTypeNullableWithAggregatesFilter
  notIn: [DirectionType]
}

input NestedEnumTaskTypeFilter {
  equals: TaskType
  in: [TaskType]
  not: NestedEnumTaskTypeFilter
  notIn: [TaskType]
}

input NestedEnumTaskTypeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumTaskTypeFilter
  _min: NestedEnumTaskTypeFilter
  equals: TaskType
  in: [TaskType]
  not: NestedEnumTaskTypeWithAggregatesFilter
  notIn: [TaskType]
}

input NestedEnumUserRoleEnumFilter {
  equals: UserRoleEnum
  in: [UserRoleEnum]
  not: NestedEnumUserRoleEnumFilter
  notIn: [UserRoleEnum]
}

input NestedEnumUserRoleEnumWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumUserRoleEnumFilter
  _min: NestedEnumUserRoleEnumFilter
  equals: UserRoleEnum
  in: [UserRoleEnum]
  not: NestedEnumUserRoleEnumWithAggregatesFilter
  notIn: [UserRoleEnum]
}

input NestedFloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float]
}

input NestedFloatNullableFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  not: NestedFloatNullableFilter
  notIn: [Float]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int]
}

input NestedIntNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedIntNullableFilter
  _min: NestedIntNullableFilter
  _sum: NestedIntNullableFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntNullableWithAggregatesFilter
  notIn: [Int]
}

input NestedIntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String]
  startsWith: String
}

input NestedStringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String]
  startsWith: String
}

input NestedStringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String]
  startsWith: String
}

input NullableEnumDirectionTypeFieldUpdateOperationsInput {
  set: DirectionType
}

input NullableIntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

enum NullsOrder {
  first
  last
}

type Query {
  aggregateAnswer(cursor: AnswerWhereUniqueInput, orderBy: [AnswerOrderByWithRelationInput], skip: Int, take: Int, where: AnswerWhereInput): AggregateAnswer
  aggregateDirection(cursor: DirectionWhereUniqueInput, orderBy: [DirectionOrderByWithRelationInput], skip: Int, take: Int, where: DirectionWhereInput): AggregateDirection
  aggregateMessage(cursor: MessageWhereUniqueInput, orderBy: [MessageOrderByWithRelationInput], skip: Int, take: Int, where: MessageWhereInput): AggregateMessage
  aggregateMessagerGroup(cursor: MessagerGroupWhereUniqueInput, orderBy: [MessagerGroupOrderByWithRelationInput], skip: Int, take: Int, where: MessagerGroupWhereInput): AggregateMessagerGroup
  aggregateResponse(cursor: ResponseWhereUniqueInput, orderBy: [ResponseOrderByWithRelationInput], skip: Int, take: Int, where: ResponseWhereInput): AggregateResponse
  aggregateSpecialization(cursor: SpecializationWhereUniqueInput, orderBy: [SpecializationOrderByWithRelationInput], skip: Int, take: Int, where: SpecializationWhereInput): AggregateSpecialization
  aggregateTask(cursor: TaskWhereUniqueInput, orderBy: [TaskOrderByWithRelationInput], skip: Int, take: Int, where: TaskWhereInput): AggregateTask
  aggregateTaskAnswer(cursor: TaskAnswerWhereUniqueInput, orderBy: [TaskAnswerOrderByWithRelationInput], skip: Int, take: Int, where: TaskAnswerWhereInput): AggregateTaskAnswer
  aggregateTest(cursor: TestWhereUniqueInput, orderBy: [TestOrderByWithRelationInput], skip: Int, take: Int, where: TestWhereInput): AggregateTest
  aggregateUser(cursor: UserWhereUniqueInput, orderBy: [UserOrderByWithRelationInput], skip: Int, take: Int, where: UserWhereInput): AggregateUser
  findFirstAnswer(cursor: AnswerWhereUniqueInput, distinct: [AnswerScalarFieldEnum], orderBy: [AnswerOrderByWithRelationInput], skip: Int, take: Int, where: AnswerWhereInput): Answer
  findFirstDirection(cursor: DirectionWhereUniqueInput, distinct: [DirectionScalarFieldEnum], orderBy: [DirectionOrderByWithRelationInput], skip: Int, take: Int, where: DirectionWhereInput): Direction
  findFirstMessage(cursor: MessageWhereUniqueInput, distinct: [MessageScalarFieldEnum], orderBy: [MessageOrderByWithRelationInput], skip: Int, take: Int, where: MessageWhereInput): Message
  findFirstMessagerGroup(cursor: MessagerGroupWhereUniqueInput, distinct: [MessagerGroupScalarFieldEnum], orderBy: [MessagerGroupOrderByWithRelationInput], skip: Int, take: Int, where: MessagerGroupWhereInput): MessagerGroup
  findFirstResponse(cursor: ResponseWhereUniqueInput, distinct: [ResponseScalarFieldEnum], orderBy: [ResponseOrderByWithRelationInput], skip: Int, take: Int, where: ResponseWhereInput): Response
  findFirstSpecialization(cursor: SpecializationWhereUniqueInput, distinct: [SpecializationScalarFieldEnum], orderBy: [SpecializationOrderByWithRelationInput], skip: Int, take: Int, where: SpecializationWhereInput): Specialization
  findFirstTask(cursor: TaskWhereUniqueInput, distinct: [TaskScalarFieldEnum], orderBy: [TaskOrderByWithRelationInput], skip: Int, take: Int, where: TaskWhereInput): Task
  findFirstTaskAnswer(cursor: TaskAnswerWhereUniqueInput, distinct: [TaskAnswerScalarFieldEnum], orderBy: [TaskAnswerOrderByWithRelationInput], skip: Int, take: Int, where: TaskAnswerWhereInput): TaskAnswer
  findFirstTest(cursor: TestWhereUniqueInput, distinct: [TestScalarFieldEnum], orderBy: [TestOrderByWithRelationInput], skip: Int, take: Int, where: TestWhereInput): Test
  findFirstUser(cursor: UserWhereUniqueInput, distinct: [UserScalarFieldEnum], orderBy: [UserOrderByWithRelationInput], skip: Int, take: Int, where: UserWhereInput): User
  findManyAnswer(cursor: AnswerWhereUniqueInput, distinct: [AnswerScalarFieldEnum], orderBy: [AnswerOrderByWithRelationInput], skip: Int, take: Int, where: AnswerWhereInput): [Answer!]!
  findManyAnswerCount(cursor: AnswerWhereUniqueInput, distinct: [AnswerScalarFieldEnum], orderBy: [AnswerOrderByWithRelationInput], skip: Int, take: Int, where: AnswerWhereInput): Int!
  findManyDirection(cursor: DirectionWhereUniqueInput, distinct: [DirectionScalarFieldEnum], orderBy: [DirectionOrderByWithRelationInput], skip: Int, take: Int, where: DirectionWhereInput): [Direction!]!
  findManyDirectionCount(cursor: DirectionWhereUniqueInput, distinct: [DirectionScalarFieldEnum], orderBy: [DirectionOrderByWithRelationInput], skip: Int, take: Int, where: DirectionWhereInput): Int!
  findManyMessage(cursor: MessageWhereUniqueInput, distinct: [MessageScalarFieldEnum], orderBy: [MessageOrderByWithRelationInput], skip: Int, take: Int, where: MessageWhereInput): [Message!]!
  findManyMessageCount(cursor: MessageWhereUniqueInput, distinct: [MessageScalarFieldEnum], orderBy: [MessageOrderByWithRelationInput], skip: Int, take: Int, where: MessageWhereInput): Int!
  findManyMessagerGroup(cursor: MessagerGroupWhereUniqueInput, distinct: [MessagerGroupScalarFieldEnum], orderBy: [MessagerGroupOrderByWithRelationInput], skip: Int, take: Int, where: MessagerGroupWhereInput): [MessagerGroup!]!
  findManyMessagerGroupCount(cursor: MessagerGroupWhereUniqueInput, distinct: [MessagerGroupScalarFieldEnum], orderBy: [MessagerGroupOrderByWithRelationInput], skip: Int, take: Int, where: MessagerGroupWhereInput): Int!
  findManyResponse(cursor: ResponseWhereUniqueInput, distinct: [ResponseScalarFieldEnum], orderBy: [ResponseOrderByWithRelationInput], skip: Int, take: Int, where: ResponseWhereInput): [Response!]!
  findManyResponseCount(cursor: ResponseWhereUniqueInput, distinct: [ResponseScalarFieldEnum], orderBy: [ResponseOrderByWithRelationInput], skip: Int, take: Int, where: ResponseWhereInput): Int!
  findManySpecialization(cursor: SpecializationWhereUniqueInput, distinct: [SpecializationScalarFieldEnum], orderBy: [SpecializationOrderByWithRelationInput], skip: Int, take: Int, where: SpecializationWhereInput): [Specialization!]!
  findManySpecializationCount(cursor: SpecializationWhereUniqueInput, distinct: [SpecializationScalarFieldEnum], orderBy: [SpecializationOrderByWithRelationInput], skip: Int, take: Int, where: SpecializationWhereInput): Int!
  findManyTask(cursor: TaskWhereUniqueInput, distinct: [TaskScalarFieldEnum], orderBy: [TaskOrderByWithRelationInput], skip: Int, take: Int, where: TaskWhereInput): [Task!]!
  findManyTaskAnswer(cursor: TaskAnswerWhereUniqueInput, distinct: [TaskAnswerScalarFieldEnum], orderBy: [TaskAnswerOrderByWithRelationInput], skip: Int, take: Int, where: TaskAnswerWhereInput): [TaskAnswer!]!
  findManyTaskAnswerCount(cursor: TaskAnswerWhereUniqueInput, distinct: [TaskAnswerScalarFieldEnum], orderBy: [TaskAnswerOrderByWithRelationInput], skip: Int, take: Int, where: TaskAnswerWhereInput): Int!
  findManyTaskCount(cursor: TaskWhereUniqueInput, distinct: [TaskScalarFieldEnum], orderBy: [TaskOrderByWithRelationInput], skip: Int, take: Int, where: TaskWhereInput): Int!
  findManyTest(cursor: TestWhereUniqueInput, distinct: [TestScalarFieldEnum], orderBy: [TestOrderByWithRelationInput], skip: Int, take: Int, where: TestWhereInput): [Test!]!
  findManyTestCount(cursor: TestWhereUniqueInput, distinct: [TestScalarFieldEnum], orderBy: [TestOrderByWithRelationInput], skip: Int, take: Int, where: TestWhereInput): Int!
  findManyUser(cursor: UserWhereUniqueInput, distinct: [UserScalarFieldEnum], orderBy: [UserOrderByWithRelationInput], skip: Int, take: Int, where: UserWhereInput): [User!]!
  findManyUserCount(cursor: UserWhereUniqueInput, distinct: [UserScalarFieldEnum], orderBy: [UserOrderByWithRelationInput], skip: Int, take: Int, where: UserWhereInput): Int!
  findUniqueAnswer(where: AnswerWhereUniqueInput!): Answer
  findUniqueDirection(where: DirectionWhereUniqueInput!): Direction
  findUniqueMessage(where: MessageWhereUniqueInput!): Message
  findUniqueMessagerGroup(where: MessagerGroupWhereUniqueInput!): MessagerGroup
  findUniqueResponse(where: ResponseWhereUniqueInput!): Response
  findUniqueSpecialization(where: SpecializationWhereUniqueInput!): Specialization
  findUniqueTask(where: TaskWhereUniqueInput!): Task
  findUniqueTaskAnswer(where: TaskAnswerWhereUniqueInput!): TaskAnswer
  findUniqueTest(where: TestWhereUniqueInput!): Test
  findUniqueUser(where: UserWhereUniqueInput!): User
  getSchema: Schema!
  me: User
}

enum QueryMode {
  default
  insensitive
}

type Response {
  _count: ResponseCountOutputType!
  answers(cursor: AnswerWhereUniqueInput, distinct: [AnswerScalarFieldEnum], orderBy: [AnswerOrderByWithRelationInput], skip: Int, take: Int, where: AnswerWhereInput): [Answer!]!
  createdAt: DateTime!
  direction: Direction!
  directionId: Int!
  id: Int!
  tests(cursor: TestWhereUniqueInput, distinct: [TestScalarFieldEnum], orderBy: [TestOrderByWithRelationInput], skip: Int, take: Int, where: TestWhereInput): [Test!]!
  text: String
  user: User!
  userId: Int!
  verdict: String
}

type ResponseAvgAggregateOutputType {
  directionId: Float
  id: Float
  userId: Float
}

input ResponseAvgOrderByAggregateInput {
  directionId: SortOrder
  id: SortOrder
  userId: SortOrder
}

type ResponseCountAggregateOutputType {
  _all: Int!
  createdAt: Int!
  directionId: Int!
  id: Int!
  text: Int!
  userId: Int!
  verdict: Int!
}

input ResponseCountOrderByAggregateInput {
  createdAt: SortOrder
  directionId: SortOrder
  id: SortOrder
  text: SortOrder
  userId: SortOrder
  verdict: SortOrder
}

type ResponseCountOutputType {
  answers: Int!
  tests: Int!
}

input ResponseCreateInput {
  answers: AnswerCreateNestedManyWithoutResponseInput
  createdAt: DateTime
  direction: DirectionCreateNestedOneWithoutResponsesInput!
  tests: TestCreateNestedManyWithoutResponseInput
  text: String
  user: UserCreateNestedOneWithoutResponsesInput!
  verdict: String
}

input ResponseCreateManyDirectionInput {
  createdAt: DateTime
  id: Int
  text: String
  userId: Int!
  verdict: String
}

input ResponseCreateManyDirectionInputEnvelope {
  data: ResponseCreateManyDirectionInput!
  skipDuplicates: Boolean
}

input ResponseCreateManyInput {
  createdAt: DateTime
  directionId: Int!
  id: Int
  text: String
  userId: Int!
  verdict: String
}

input ResponseCreateManyUserInput {
  createdAt: DateTime
  directionId: Int!
  id: Int
  text: String
  verdict: String
}

input ResponseCreateManyUserInputEnvelope {
  data: ResponseCreateManyUserInput!
  skipDuplicates: Boolean
}

input ResponseCreateNestedManyWithoutAnswersInput {
  connect: [ResponseWhereUniqueInput]
  connectOrCreate: [ResponseCreateOrConnectWithoutAnswersInput]
  create: [ResponseCreateWithoutAnswersInput]
}

input ResponseCreateNestedManyWithoutDirectionInput {
  connect: [ResponseWhereUniqueInput]
  connectOrCreate: [ResponseCreateOrConnectWithoutDirectionInput]
  create: [ResponseCreateWithoutDirectionInput]
  createMany: ResponseCreateManyDirectionInputEnvelope
}

input ResponseCreateNestedManyWithoutTestsInput {
  connect: [ResponseWhereUniqueInput]
  connectOrCreate: [ResponseCreateOrConnectWithoutTestsInput]
  create: [ResponseCreateWithoutTestsInput]
}

input ResponseCreateNestedManyWithoutUserInput {
  connect: [ResponseWhereUniqueInput]
  connectOrCreate: [ResponseCreateOrConnectWithoutUserInput]
  create: [ResponseCreateWithoutUserInput]
  createMany: ResponseCreateManyUserInputEnvelope
}

input ResponseCreateOrConnectWithoutAnswersInput {
  create: ResponseCreateWithoutAnswersInput!
  where: ResponseWhereUniqueInput!
}

input ResponseCreateOrConnectWithoutDirectionInput {
  create: ResponseCreateWithoutDirectionInput!
  where: ResponseWhereUniqueInput!
}

input ResponseCreateOrConnectWithoutTestsInput {
  create: ResponseCreateWithoutTestsInput!
  where: ResponseWhereUniqueInput!
}

input ResponseCreateOrConnectWithoutUserInput {
  create: ResponseCreateWithoutUserInput!
  where: ResponseWhereUniqueInput!
}

input ResponseCreateWithoutAnswersInput {
  createdAt: DateTime
  direction: DirectionCreateNestedOneWithoutResponsesInput!
  tests: TestCreateNestedManyWithoutResponseInput
  text: String
  user: UserCreateNestedOneWithoutResponsesInput!
  verdict: String
}

input ResponseCreateWithoutDirectionInput {
  answers: AnswerCreateNestedManyWithoutResponseInput
  createdAt: DateTime
  tests: TestCreateNestedManyWithoutResponseInput
  text: String
  user: UserCreateNestedOneWithoutResponsesInput!
  verdict: String
}

input ResponseCreateWithoutTestsInput {
  answers: AnswerCreateNestedManyWithoutResponseInput
  createdAt: DateTime
  direction: DirectionCreateNestedOneWithoutResponsesInput!
  text: String
  user: UserCreateNestedOneWithoutResponsesInput!
  verdict: String
}

input ResponseCreateWithoutUserInput {
  answers: AnswerCreateNestedManyWithoutResponseInput
  createdAt: DateTime
  direction: DirectionCreateNestedOneWithoutResponsesInput!
  tests: TestCreateNestedManyWithoutResponseInput
  text: String
  verdict: String
}

input ResponseListRelationFilter {
  every: ResponseWhereInput
  none: ResponseWhereInput
  some: ResponseWhereInput
}

type ResponseMaxAggregateOutputType {
  createdAt: DateTime
  directionId: Int
  id: Int
  text: String
  userId: Int
  verdict: String
}

input ResponseMaxOrderByAggregateInput {
  createdAt: SortOrder
  directionId: SortOrder
  id: SortOrder
  text: SortOrder
  userId: SortOrder
  verdict: SortOrder
}

type ResponseMinAggregateOutputType {
  createdAt: DateTime
  directionId: Int
  id: Int
  text: String
  userId: Int
  verdict: String
}

input ResponseMinOrderByAggregateInput {
  createdAt: SortOrder
  directionId: SortOrder
  id: SortOrder
  text: SortOrder
  userId: SortOrder
  verdict: SortOrder
}

input ResponseOrderByRelationAggregateInput {
  _count: SortOrder
}

input ResponseOrderByWithAggregationInput {
  _avg: ResponseAvgOrderByAggregateInput
  _count: ResponseCountOrderByAggregateInput
  _max: ResponseMaxOrderByAggregateInput
  _min: ResponseMinOrderByAggregateInput
  _sum: ResponseSumOrderByAggregateInput
  createdAt: SortOrder
  directionId: SortOrder
  id: SortOrder
  text: SortOrderInput
  userId: SortOrder
  verdict: SortOrderInput
}

input ResponseOrderByWithRelationInput {
  answers: AnswerOrderByRelationAggregateInput
  createdAt: SortOrder
  direction: DirectionOrderByWithRelationInput
  directionId: SortOrder
  id: SortOrder
  tests: TestOrderByRelationAggregateInput
  text: SortOrderInput
  user: UserOrderByWithRelationInput
  userId: SortOrder
  verdict: SortOrderInput
}

enum ResponseScalarFieldEnum {
  createdAt
  directionId
  id
  text
  userId
  verdict
}

input ResponseScalarWhereInput {
  AND: [ResponseScalarWhereInput]
  NOT: [ResponseScalarWhereInput]
  OR: [ResponseScalarWhereInput]
  createdAt: DateTimeFilter
  directionId: IntFilter
  id: IntFilter
  text: StringNullableFilter
  userId: IntFilter
  verdict: StringNullableFilter
}

input ResponseScalarWhereWithAggregatesInput {
  AND: [ResponseScalarWhereWithAggregatesInput]
  NOT: [ResponseScalarWhereWithAggregatesInput]
  OR: [ResponseScalarWhereWithAggregatesInput]
  createdAt: DateTimeWithAggregatesFilter
  directionId: IntWithAggregatesFilter
  id: IntWithAggregatesFilter
  text: StringNullableWithAggregatesFilter
  userId: IntWithAggregatesFilter
  verdict: StringNullableWithAggregatesFilter
}

type ResponseSumAggregateOutputType {
  directionId: Int
  id: Int
  userId: Int
}

input ResponseSumOrderByAggregateInput {
  directionId: SortOrder
  id: SortOrder
  userId: SortOrder
}

input ResponseUncheckedCreateInput {
  answers: AnswerUncheckedCreateNestedManyWithoutResponseInput
  createdAt: DateTime
  directionId: Int!
  id: Int
  tests: TestUncheckedCreateNestedManyWithoutResponseInput
  text: String
  userId: Int!
  verdict: String
}

input ResponseUncheckedCreateNestedManyWithoutAnswersInput {
  connect: [ResponseWhereUniqueInput]
  connectOrCreate: [ResponseCreateOrConnectWithoutAnswersInput]
  create: [ResponseCreateWithoutAnswersInput]
}

input ResponseUncheckedCreateNestedManyWithoutDirectionInput {
  connect: [ResponseWhereUniqueInput]
  connectOrCreate: [ResponseCreateOrConnectWithoutDirectionInput]
  create: [ResponseCreateWithoutDirectionInput]
  createMany: ResponseCreateManyDirectionInputEnvelope
}

input ResponseUncheckedCreateNestedManyWithoutTestsInput {
  connect: [ResponseWhereUniqueInput]
  connectOrCreate: [ResponseCreateOrConnectWithoutTestsInput]
  create: [ResponseCreateWithoutTestsInput]
}

input ResponseUncheckedCreateNestedManyWithoutUserInput {
  connect: [ResponseWhereUniqueInput]
  connectOrCreate: [ResponseCreateOrConnectWithoutUserInput]
  create: [ResponseCreateWithoutUserInput]
  createMany: ResponseCreateManyUserInputEnvelope
}

input ResponseUncheckedCreateWithoutAnswersInput {
  createdAt: DateTime
  directionId: Int!
  id: Int
  tests: TestUncheckedCreateNestedManyWithoutResponseInput
  text: String
  userId: Int!
  verdict: String
}

input ResponseUncheckedCreateWithoutDirectionInput {
  answers: AnswerUncheckedCreateNestedManyWithoutResponseInput
  createdAt: DateTime
  id: Int
  tests: TestUncheckedCreateNestedManyWithoutResponseInput
  text: String
  userId: Int!
  verdict: String
}

input ResponseUncheckedCreateWithoutTestsInput {
  answers: AnswerUncheckedCreateNestedManyWithoutResponseInput
  createdAt: DateTime
  directionId: Int!
  id: Int
  text: String
  userId: Int!
  verdict: String
}

input ResponseUncheckedCreateWithoutUserInput {
  answers: AnswerUncheckedCreateNestedManyWithoutResponseInput
  createdAt: DateTime
  directionId: Int!
  id: Int
  tests: TestUncheckedCreateNestedManyWithoutResponseInput
  text: String
  verdict: String
}

input ResponseUncheckedUpdateInput {
  answers: AnswerUncheckedUpdateManyWithoutResponseNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  directionId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  tests: TestUncheckedUpdateManyWithoutResponseNestedInput
  text: NullableStringFieldUpdateOperationsInput
  userId: IntFieldUpdateOperationsInput
  verdict: NullableStringFieldUpdateOperationsInput
}

input ResponseUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  directionId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  text: NullableStringFieldUpdateOperationsInput
  userId: IntFieldUpdateOperationsInput
  verdict: NullableStringFieldUpdateOperationsInput
}

input ResponseUncheckedUpdateManyWithoutAnswersInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  directionId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  text: NullableStringFieldUpdateOperationsInput
  userId: IntFieldUpdateOperationsInput
  verdict: NullableStringFieldUpdateOperationsInput
}

input ResponseUncheckedUpdateManyWithoutAnswersNestedInput {
  connect: [ResponseWhereUniqueInput]
  connectOrCreate: [ResponseCreateOrConnectWithoutAnswersInput]
  create: [ResponseCreateWithoutAnswersInput]
  delete: [ResponseWhereUniqueInput]
  deleteMany: [ResponseScalarWhereInput]
  disconnect: [ResponseWhereUniqueInput]
  set: [ResponseWhereUniqueInput]
  update: [ResponseUpdateWithWhereUniqueWithoutAnswersInput]
  updateMany: [ResponseUpdateManyWithWhereWithoutAnswersInput]
  upsert: [ResponseUpsertWithWhereUniqueWithoutAnswersInput]
}

input ResponseUncheckedUpdateManyWithoutDirectionInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  text: NullableStringFieldUpdateOperationsInput
  userId: IntFieldUpdateOperationsInput
  verdict: NullableStringFieldUpdateOperationsInput
}

input ResponseUncheckedUpdateManyWithoutDirectionNestedInput {
  connect: [ResponseWhereUniqueInput]
  connectOrCreate: [ResponseCreateOrConnectWithoutDirectionInput]
  create: [ResponseCreateWithoutDirectionInput]
  createMany: ResponseCreateManyDirectionInputEnvelope
  delete: [ResponseWhereUniqueInput]
  deleteMany: [ResponseScalarWhereInput]
  disconnect: [ResponseWhereUniqueInput]
  set: [ResponseWhereUniqueInput]
  update: [ResponseUpdateWithWhereUniqueWithoutDirectionInput]
  updateMany: [ResponseUpdateManyWithWhereWithoutDirectionInput]
  upsert: [ResponseUpsertWithWhereUniqueWithoutDirectionInput]
}

input ResponseUncheckedUpdateManyWithoutTestsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  directionId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  text: NullableStringFieldUpdateOperationsInput
  userId: IntFieldUpdateOperationsInput
  verdict: NullableStringFieldUpdateOperationsInput
}

input ResponseUncheckedUpdateManyWithoutTestsNestedInput {
  connect: [ResponseWhereUniqueInput]
  connectOrCreate: [ResponseCreateOrConnectWithoutTestsInput]
  create: [ResponseCreateWithoutTestsInput]
  delete: [ResponseWhereUniqueInput]
  deleteMany: [ResponseScalarWhereInput]
  disconnect: [ResponseWhereUniqueInput]
  set: [ResponseWhereUniqueInput]
  update: [ResponseUpdateWithWhereUniqueWithoutTestsInput]
  updateMany: [ResponseUpdateManyWithWhereWithoutTestsInput]
  upsert: [ResponseUpsertWithWhereUniqueWithoutTestsInput]
}

input ResponseUncheckedUpdateManyWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  directionId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  text: NullableStringFieldUpdateOperationsInput
  verdict: NullableStringFieldUpdateOperationsInput
}

input ResponseUncheckedUpdateManyWithoutUserNestedInput {
  connect: [ResponseWhereUniqueInput]
  connectOrCreate: [ResponseCreateOrConnectWithoutUserInput]
  create: [ResponseCreateWithoutUserInput]
  createMany: ResponseCreateManyUserInputEnvelope
  delete: [ResponseWhereUniqueInput]
  deleteMany: [ResponseScalarWhereInput]
  disconnect: [ResponseWhereUniqueInput]
  set: [ResponseWhereUniqueInput]
  update: [ResponseUpdateWithWhereUniqueWithoutUserInput]
  updateMany: [ResponseUpdateManyWithWhereWithoutUserInput]
  upsert: [ResponseUpsertWithWhereUniqueWithoutUserInput]
}

input ResponseUncheckedUpdateWithoutAnswersInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  directionId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  tests: TestUncheckedUpdateManyWithoutResponseNestedInput
  text: NullableStringFieldUpdateOperationsInput
  userId: IntFieldUpdateOperationsInput
  verdict: NullableStringFieldUpdateOperationsInput
}

input ResponseUncheckedUpdateWithoutDirectionInput {
  answers: AnswerUncheckedUpdateManyWithoutResponseNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  tests: TestUncheckedUpdateManyWithoutResponseNestedInput
  text: NullableStringFieldUpdateOperationsInput
  userId: IntFieldUpdateOperationsInput
  verdict: NullableStringFieldUpdateOperationsInput
}

input ResponseUncheckedUpdateWithoutTestsInput {
  answers: AnswerUncheckedUpdateManyWithoutResponseNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  directionId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  text: NullableStringFieldUpdateOperationsInput
  userId: IntFieldUpdateOperationsInput
  verdict: NullableStringFieldUpdateOperationsInput
}

input ResponseUncheckedUpdateWithoutUserInput {
  answers: AnswerUncheckedUpdateManyWithoutResponseNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  directionId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  tests: TestUncheckedUpdateManyWithoutResponseNestedInput
  text: NullableStringFieldUpdateOperationsInput
  verdict: NullableStringFieldUpdateOperationsInput
}

input ResponseUpdateInput {
  answers: AnswerUpdateManyWithoutResponseNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  direction: DirectionUpdateOneRequiredWithoutResponsesNestedInput
  tests: TestUpdateManyWithoutResponseNestedInput
  text: NullableStringFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutResponsesNestedInput
  verdict: NullableStringFieldUpdateOperationsInput
}

input ResponseUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  text: NullableStringFieldUpdateOperationsInput
  verdict: NullableStringFieldUpdateOperationsInput
}

input ResponseUpdateManyWithWhereWithoutAnswersInput {
  data: ResponseUpdateManyMutationInput!
  where: ResponseScalarWhereInput!
}

input ResponseUpdateManyWithWhereWithoutDirectionInput {
  data: ResponseUpdateManyMutationInput!
  where: ResponseScalarWhereInput!
}

input ResponseUpdateManyWithWhereWithoutTestsInput {
  data: ResponseUpdateManyMutationInput!
  where: ResponseScalarWhereInput!
}

input ResponseUpdateManyWithWhereWithoutUserInput {
  data: ResponseUpdateManyMutationInput!
  where: ResponseScalarWhereInput!
}

input ResponseUpdateManyWithoutAnswersNestedInput {
  connect: [ResponseWhereUniqueInput]
  connectOrCreate: [ResponseCreateOrConnectWithoutAnswersInput]
  create: [ResponseCreateWithoutAnswersInput]
  delete: [ResponseWhereUniqueInput]
  deleteMany: [ResponseScalarWhereInput]
  disconnect: [ResponseWhereUniqueInput]
  set: [ResponseWhereUniqueInput]
  update: [ResponseUpdateWithWhereUniqueWithoutAnswersInput]
  updateMany: [ResponseUpdateManyWithWhereWithoutAnswersInput]
  upsert: [ResponseUpsertWithWhereUniqueWithoutAnswersInput]
}

input ResponseUpdateManyWithoutDirectionNestedInput {
  connect: [ResponseWhereUniqueInput]
  connectOrCreate: [ResponseCreateOrConnectWithoutDirectionInput]
  create: [ResponseCreateWithoutDirectionInput]
  createMany: ResponseCreateManyDirectionInputEnvelope
  delete: [ResponseWhereUniqueInput]
  deleteMany: [ResponseScalarWhereInput]
  disconnect: [ResponseWhereUniqueInput]
  set: [ResponseWhereUniqueInput]
  update: [ResponseUpdateWithWhereUniqueWithoutDirectionInput]
  updateMany: [ResponseUpdateManyWithWhereWithoutDirectionInput]
  upsert: [ResponseUpsertWithWhereUniqueWithoutDirectionInput]
}

input ResponseUpdateManyWithoutTestsNestedInput {
  connect: [ResponseWhereUniqueInput]
  connectOrCreate: [ResponseCreateOrConnectWithoutTestsInput]
  create: [ResponseCreateWithoutTestsInput]
  delete: [ResponseWhereUniqueInput]
  deleteMany: [ResponseScalarWhereInput]
  disconnect: [ResponseWhereUniqueInput]
  set: [ResponseWhereUniqueInput]
  update: [ResponseUpdateWithWhereUniqueWithoutTestsInput]
  updateMany: [ResponseUpdateManyWithWhereWithoutTestsInput]
  upsert: [ResponseUpsertWithWhereUniqueWithoutTestsInput]
}

input ResponseUpdateManyWithoutUserNestedInput {
  connect: [ResponseWhereUniqueInput]
  connectOrCreate: [ResponseCreateOrConnectWithoutUserInput]
  create: [ResponseCreateWithoutUserInput]
  createMany: ResponseCreateManyUserInputEnvelope
  delete: [ResponseWhereUniqueInput]
  deleteMany: [ResponseScalarWhereInput]
  disconnect: [ResponseWhereUniqueInput]
  set: [ResponseWhereUniqueInput]
  update: [ResponseUpdateWithWhereUniqueWithoutUserInput]
  updateMany: [ResponseUpdateManyWithWhereWithoutUserInput]
  upsert: [ResponseUpsertWithWhereUniqueWithoutUserInput]
}

input ResponseUpdateWithWhereUniqueWithoutAnswersInput {
  data: ResponseUpdateWithoutAnswersInput!
  where: ResponseWhereUniqueInput!
}

input ResponseUpdateWithWhereUniqueWithoutDirectionInput {
  data: ResponseUpdateWithoutDirectionInput!
  where: ResponseWhereUniqueInput!
}

input ResponseUpdateWithWhereUniqueWithoutTestsInput {
  data: ResponseUpdateWithoutTestsInput!
  where: ResponseWhereUniqueInput!
}

input ResponseUpdateWithWhereUniqueWithoutUserInput {
  data: ResponseUpdateWithoutUserInput!
  where: ResponseWhereUniqueInput!
}

input ResponseUpdateWithoutAnswersInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  direction: DirectionUpdateOneRequiredWithoutResponsesNestedInput
  tests: TestUpdateManyWithoutResponseNestedInput
  text: NullableStringFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutResponsesNestedInput
  verdict: NullableStringFieldUpdateOperationsInput
}

input ResponseUpdateWithoutDirectionInput {
  answers: AnswerUpdateManyWithoutResponseNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  tests: TestUpdateManyWithoutResponseNestedInput
  text: NullableStringFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutResponsesNestedInput
  verdict: NullableStringFieldUpdateOperationsInput
}

input ResponseUpdateWithoutTestsInput {
  answers: AnswerUpdateManyWithoutResponseNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  direction: DirectionUpdateOneRequiredWithoutResponsesNestedInput
  text: NullableStringFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutResponsesNestedInput
  verdict: NullableStringFieldUpdateOperationsInput
}

input ResponseUpdateWithoutUserInput {
  answers: AnswerUpdateManyWithoutResponseNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  direction: DirectionUpdateOneRequiredWithoutResponsesNestedInput
  tests: TestUpdateManyWithoutResponseNestedInput
  text: NullableStringFieldUpdateOperationsInput
  verdict: NullableStringFieldUpdateOperationsInput
}

input ResponseUpsertWithWhereUniqueWithoutAnswersInput {
  create: ResponseCreateWithoutAnswersInput!
  update: ResponseUpdateWithoutAnswersInput!
  where: ResponseWhereUniqueInput!
}

input ResponseUpsertWithWhereUniqueWithoutDirectionInput {
  create: ResponseCreateWithoutDirectionInput!
  update: ResponseUpdateWithoutDirectionInput!
  where: ResponseWhereUniqueInput!
}

input ResponseUpsertWithWhereUniqueWithoutTestsInput {
  create: ResponseCreateWithoutTestsInput!
  update: ResponseUpdateWithoutTestsInput!
  where: ResponseWhereUniqueInput!
}

input ResponseUpsertWithWhereUniqueWithoutUserInput {
  create: ResponseCreateWithoutUserInput!
  update: ResponseUpdateWithoutUserInput!
  where: ResponseWhereUniqueInput!
}

input ResponseWhereInput {
  AND: [ResponseWhereInput]
  NOT: [ResponseWhereInput]
  OR: [ResponseWhereInput]
  answers: AnswerListRelationFilter
  createdAt: DateTimeFilter
  direction: DirectionRelationFilter
  directionId: IntFilter
  id: IntFilter
  tests: TestListRelationFilter
  text: StringNullableFilter
  user: UserRelationFilter
  userId: IntFilter
  verdict: StringNullableFilter
}

input ResponseWhereUniqueInput {
  AND: [ResponseWhereInput]
  NOT: [ResponseWhereInput]
  OR: [ResponseWhereInput]
  answers: AnswerListRelationFilter
  createdAt: DateTimeFilter
  direction: DirectionRelationFilter
  directionId: IntFilter
  id: Int
  tests: TestListRelationFilter
  text: StringNullableFilter
  user: UserRelationFilter
  userId: IntFilter
  verdict: StringNullableFilter
}

type Schema {
  enums: [Enum!]!
  models: [Model!]!
}

enum SortOrder {
  asc
  desc
}

input SortOrderInput {
  nulls: NullsOrder
  sort: SortOrder!
}

type Specialization {
  _count: SpecializationCountOutputType!
  createdAt: DateTime!
  directions(cursor: DirectionWhereUniqueInput, distinct: [DirectionScalarFieldEnum], orderBy: [DirectionOrderByWithRelationInput], skip: Int, take: Int, where: DirectionWhereInput): [Direction!]!
  id: Int!
  title: String!
}

type SpecializationAvgAggregateOutputType {
  id: Float
}

input SpecializationAvgOrderByAggregateInput {
  id: SortOrder
}

type SpecializationCountAggregateOutputType {
  _all: Int!
  createdAt: Int!
  id: Int!
  title: Int!
}

input SpecializationCountOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  title: SortOrder
}

type SpecializationCountOutputType {
  directions: Int!
}

input SpecializationCreateInput {
  createdAt: DateTime
  directions: DirectionCreateNestedManyWithoutSpecializationInput
  title: String!
}

input SpecializationCreateManyInput {
  createdAt: DateTime
  id: Int
  title: String!
}

input SpecializationCreateNestedOneWithoutDirectionsInput {
  connect: SpecializationWhereUniqueInput
  connectOrCreate: SpecializationCreateOrConnectWithoutDirectionsInput
  create: SpecializationCreateWithoutDirectionsInput
}

input SpecializationCreateOrConnectWithoutDirectionsInput {
  create: SpecializationCreateWithoutDirectionsInput!
  where: SpecializationWhereUniqueInput!
}

input SpecializationCreateWithoutDirectionsInput {
  createdAt: DateTime
  title: String!
}

type SpecializationMaxAggregateOutputType {
  createdAt: DateTime
  id: Int
  title: String
}

input SpecializationMaxOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  title: SortOrder
}

type SpecializationMinAggregateOutputType {
  createdAt: DateTime
  id: Int
  title: String
}

input SpecializationMinOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  title: SortOrder
}

input SpecializationOrderByWithAggregationInput {
  _avg: SpecializationAvgOrderByAggregateInput
  _count: SpecializationCountOrderByAggregateInput
  _max: SpecializationMaxOrderByAggregateInput
  _min: SpecializationMinOrderByAggregateInput
  _sum: SpecializationSumOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  title: SortOrder
}

input SpecializationOrderByWithRelationInput {
  createdAt: SortOrder
  directions: DirectionOrderByRelationAggregateInput
  id: SortOrder
  title: SortOrder
}

input SpecializationRelationFilter {
  is: SpecializationWhereInput
  isNot: SpecializationWhereInput
}

enum SpecializationScalarFieldEnum {
  createdAt
  id
  title
}

input SpecializationScalarWhereWithAggregatesInput {
  AND: [SpecializationScalarWhereWithAggregatesInput]
  NOT: [SpecializationScalarWhereWithAggregatesInput]
  OR: [SpecializationScalarWhereWithAggregatesInput]
  createdAt: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  title: StringWithAggregatesFilter
}

type SpecializationSumAggregateOutputType {
  id: Int
}

input SpecializationSumOrderByAggregateInput {
  id: SortOrder
}

input SpecializationUncheckedCreateInput {
  createdAt: DateTime
  directions: DirectionUncheckedCreateNestedManyWithoutSpecializationInput
  id: Int
  title: String!
}

input SpecializationUncheckedCreateWithoutDirectionsInput {
  createdAt: DateTime
  id: Int
  title: String!
}

input SpecializationUncheckedUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  directions: DirectionUncheckedUpdateManyWithoutSpecializationNestedInput
  id: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input SpecializationUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input SpecializationUncheckedUpdateWithoutDirectionsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input SpecializationUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  directions: DirectionUpdateManyWithoutSpecializationNestedInput
  title: StringFieldUpdateOperationsInput
}

input SpecializationUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input SpecializationUpdateOneRequiredWithoutDirectionsNestedInput {
  connect: SpecializationWhereUniqueInput
  connectOrCreate: SpecializationCreateOrConnectWithoutDirectionsInput
  create: SpecializationCreateWithoutDirectionsInput
  update: SpecializationUpdateToOneWithWhereWithoutDirectionsInput
  upsert: SpecializationUpsertWithoutDirectionsInput
}

input SpecializationUpdateToOneWithWhereWithoutDirectionsInput {
  data: SpecializationUpdateWithoutDirectionsInput!
  where: SpecializationWhereInput
}

input SpecializationUpdateWithoutDirectionsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input SpecializationUpsertWithoutDirectionsInput {
  create: SpecializationCreateWithoutDirectionsInput!
  update: SpecializationUpdateWithoutDirectionsInput!
  where: SpecializationWhereInput
}

input SpecializationWhereInput {
  AND: [SpecializationWhereInput]
  NOT: [SpecializationWhereInput]
  OR: [SpecializationWhereInput]
  createdAt: DateTimeFilter
  directions: DirectionListRelationFilter
  id: IntFilter
  title: StringFilter
}

input SpecializationWhereUniqueInput {
  AND: [SpecializationWhereInput]
  NOT: [SpecializationWhereInput]
  OR: [SpecializationWhereInput]
  createdAt: DateTimeFilter
  directions: DirectionListRelationFilter
  id: Int
  title: StringFilter
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String]
  startsWith: String
}

input StringNullableListFilter {
  equals: [String]
  has: String
  hasEvery: [String]
  hasSome: [String]
  isEmpty: Boolean
}

input StringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String]
  startsWith: String
}

input StringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringWithAggregatesFilter
  notIn: [String]
  startsWith: String
}

type Task {
  _count: TaskCountOutputType!
  code: String
  correctMultipleAnswer: [Int!]!
  correctSingleAnswer: Int
  createdAt: DateTime!
  id: Int!
  question: String!
  taskAnswers(cursor: TaskAnswerWhereUniqueInput, distinct: [TaskAnswerScalarFieldEnum], orderBy: [TaskAnswerOrderByWithRelationInput], skip: Int, take: Int, where: TaskAnswerWhereInput): [TaskAnswer!]!
  test(where: TestWhereInput): Test
  testId: Int
  type: TaskType!
  variants: [String!]!
}

type TaskAnswer {
  answer: String!
  answerModel: Answer!
  answerModelId: Int!
  id: Int!
  task: Task!
  taskId: Int!
  user: User!
  userId: Int!
  verdict: Int
}

type TaskAnswerAvgAggregateOutputType {
  answerModelId: Float
  id: Float
  taskId: Float
  userId: Float
  verdict: Float
}

input TaskAnswerAvgOrderByAggregateInput {
  answerModelId: SortOrder
  id: SortOrder
  taskId: SortOrder
  userId: SortOrder
  verdict: SortOrder
}

type TaskAnswerCountAggregateOutputType {
  _all: Int!
  answer: Int!
  answerModelId: Int!
  id: Int!
  taskId: Int!
  userId: Int!
  verdict: Int!
}

input TaskAnswerCountOrderByAggregateInput {
  answer: SortOrder
  answerModelId: SortOrder
  id: SortOrder
  taskId: SortOrder
  userId: SortOrder
  verdict: SortOrder
}

input TaskAnswerCreateInput {
  answer: String!
  answerModel: AnswerCreateNestedOneWithoutTaskAnswersInput!
  task: TaskCreateNestedOneWithoutTaskAnswersInput!
  user: UserCreateNestedOneWithoutAnswersInput!
  verdict: Int
}

input TaskAnswerCreateManyAnswerModelInput {
  answer: String!
  id: Int
  taskId: Int!
  userId: Int!
  verdict: Int
}

input TaskAnswerCreateManyAnswerModelInputEnvelope {
  data: TaskAnswerCreateManyAnswerModelInput!
  skipDuplicates: Boolean
}

input TaskAnswerCreateManyInput {
  answer: String!
  answerModelId: Int!
  id: Int
  taskId: Int!
  userId: Int!
  verdict: Int
}

input TaskAnswerCreateManyTaskInput {
  answer: String!
  answerModelId: Int!
  id: Int
  userId: Int!
  verdict: Int
}

input TaskAnswerCreateManyTaskInputEnvelope {
  data: TaskAnswerCreateManyTaskInput!
  skipDuplicates: Boolean
}

input TaskAnswerCreateManyUserInput {
  answer: String!
  answerModelId: Int!
  id: Int
  taskId: Int!
  verdict: Int
}

input TaskAnswerCreateManyUserInputEnvelope {
  data: TaskAnswerCreateManyUserInput!
  skipDuplicates: Boolean
}

input TaskAnswerCreateNestedManyWithoutAnswerModelInput {
  connect: [TaskAnswerWhereUniqueInput]
  connectOrCreate: [TaskAnswerCreateOrConnectWithoutAnswerModelInput]
  create: [TaskAnswerCreateWithoutAnswerModelInput]
  createMany: TaskAnswerCreateManyAnswerModelInputEnvelope
}

input TaskAnswerCreateNestedManyWithoutTaskInput {
  connect: [TaskAnswerWhereUniqueInput]
  connectOrCreate: [TaskAnswerCreateOrConnectWithoutTaskInput]
  create: [TaskAnswerCreateWithoutTaskInput]
  createMany: TaskAnswerCreateManyTaskInputEnvelope
}

input TaskAnswerCreateNestedManyWithoutUserInput {
  connect: [TaskAnswerWhereUniqueInput]
  connectOrCreate: [TaskAnswerCreateOrConnectWithoutUserInput]
  create: [TaskAnswerCreateWithoutUserInput]
  createMany: TaskAnswerCreateManyUserInputEnvelope
}

input TaskAnswerCreateOrConnectWithoutAnswerModelInput {
  create: TaskAnswerCreateWithoutAnswerModelInput!
  where: TaskAnswerWhereUniqueInput!
}

input TaskAnswerCreateOrConnectWithoutTaskInput {
  create: TaskAnswerCreateWithoutTaskInput!
  where: TaskAnswerWhereUniqueInput!
}

input TaskAnswerCreateOrConnectWithoutUserInput {
  create: TaskAnswerCreateWithoutUserInput!
  where: TaskAnswerWhereUniqueInput!
}

input TaskAnswerCreateWithoutAnswerModelInput {
  answer: String!
  task: TaskCreateNestedOneWithoutTaskAnswersInput!
  user: UserCreateNestedOneWithoutAnswersInput!
  verdict: Int
}

input TaskAnswerCreateWithoutTaskInput {
  answer: String!
  answerModel: AnswerCreateNestedOneWithoutTaskAnswersInput!
  user: UserCreateNestedOneWithoutAnswersInput!
  verdict: Int
}

input TaskAnswerCreateWithoutUserInput {
  answer: String!
  answerModel: AnswerCreateNestedOneWithoutTaskAnswersInput!
  task: TaskCreateNestedOneWithoutTaskAnswersInput!
  verdict: Int
}

input TaskAnswerListRelationFilter {
  every: TaskAnswerWhereInput
  none: TaskAnswerWhereInput
  some: TaskAnswerWhereInput
}

type TaskAnswerMaxAggregateOutputType {
  answer: String
  answerModelId: Int
  id: Int
  taskId: Int
  userId: Int
  verdict: Int
}

input TaskAnswerMaxOrderByAggregateInput {
  answer: SortOrder
  answerModelId: SortOrder
  id: SortOrder
  taskId: SortOrder
  userId: SortOrder
  verdict: SortOrder
}

type TaskAnswerMinAggregateOutputType {
  answer: String
  answerModelId: Int
  id: Int
  taskId: Int
  userId: Int
  verdict: Int
}

input TaskAnswerMinOrderByAggregateInput {
  answer: SortOrder
  answerModelId: SortOrder
  id: SortOrder
  taskId: SortOrder
  userId: SortOrder
  verdict: SortOrder
}

input TaskAnswerOrderByRelationAggregateInput {
  _count: SortOrder
}

input TaskAnswerOrderByWithAggregationInput {
  _avg: TaskAnswerAvgOrderByAggregateInput
  _count: TaskAnswerCountOrderByAggregateInput
  _max: TaskAnswerMaxOrderByAggregateInput
  _min: TaskAnswerMinOrderByAggregateInput
  _sum: TaskAnswerSumOrderByAggregateInput
  answer: SortOrder
  answerModelId: SortOrder
  id: SortOrder
  taskId: SortOrder
  userId: SortOrder
  verdict: SortOrderInput
}

input TaskAnswerOrderByWithRelationInput {
  answer: SortOrder
  answerModel: AnswerOrderByWithRelationInput
  answerModelId: SortOrder
  id: SortOrder
  task: TaskOrderByWithRelationInput
  taskId: SortOrder
  user: UserOrderByWithRelationInput
  userId: SortOrder
  verdict: SortOrderInput
}

enum TaskAnswerScalarFieldEnum {
  answer
  answerModelId
  id
  taskId
  userId
  verdict
}

input TaskAnswerScalarWhereInput {
  AND: [TaskAnswerScalarWhereInput]
  NOT: [TaskAnswerScalarWhereInput]
  OR: [TaskAnswerScalarWhereInput]
  answer: StringFilter
  answerModelId: IntFilter
  id: IntFilter
  taskId: IntFilter
  userId: IntFilter
  verdict: IntNullableFilter
}

input TaskAnswerScalarWhereWithAggregatesInput {
  AND: [TaskAnswerScalarWhereWithAggregatesInput]
  NOT: [TaskAnswerScalarWhereWithAggregatesInput]
  OR: [TaskAnswerScalarWhereWithAggregatesInput]
  answer: StringWithAggregatesFilter
  answerModelId: IntWithAggregatesFilter
  id: IntWithAggregatesFilter
  taskId: IntWithAggregatesFilter
  userId: IntWithAggregatesFilter
  verdict: IntNullableWithAggregatesFilter
}

type TaskAnswerSumAggregateOutputType {
  answerModelId: Int
  id: Int
  taskId: Int
  userId: Int
  verdict: Int
}

input TaskAnswerSumOrderByAggregateInput {
  answerModelId: SortOrder
  id: SortOrder
  taskId: SortOrder
  userId: SortOrder
  verdict: SortOrder
}

input TaskAnswerUncheckedCreateInput {
  answer: String!
  answerModelId: Int!
  id: Int
  taskId: Int!
  userId: Int!
  verdict: Int
}

input TaskAnswerUncheckedCreateNestedManyWithoutAnswerModelInput {
  connect: [TaskAnswerWhereUniqueInput]
  connectOrCreate: [TaskAnswerCreateOrConnectWithoutAnswerModelInput]
  create: [TaskAnswerCreateWithoutAnswerModelInput]
  createMany: TaskAnswerCreateManyAnswerModelInputEnvelope
}

input TaskAnswerUncheckedCreateNestedManyWithoutTaskInput {
  connect: [TaskAnswerWhereUniqueInput]
  connectOrCreate: [TaskAnswerCreateOrConnectWithoutTaskInput]
  create: [TaskAnswerCreateWithoutTaskInput]
  createMany: TaskAnswerCreateManyTaskInputEnvelope
}

input TaskAnswerUncheckedCreateNestedManyWithoutUserInput {
  connect: [TaskAnswerWhereUniqueInput]
  connectOrCreate: [TaskAnswerCreateOrConnectWithoutUserInput]
  create: [TaskAnswerCreateWithoutUserInput]
  createMany: TaskAnswerCreateManyUserInputEnvelope
}

input TaskAnswerUncheckedCreateWithoutAnswerModelInput {
  answer: String!
  id: Int
  taskId: Int!
  userId: Int!
  verdict: Int
}

input TaskAnswerUncheckedCreateWithoutTaskInput {
  answer: String!
  answerModelId: Int!
  id: Int
  userId: Int!
  verdict: Int
}

input TaskAnswerUncheckedCreateWithoutUserInput {
  answer: String!
  answerModelId: Int!
  id: Int
  taskId: Int!
  verdict: Int
}

input TaskAnswerUncheckedUpdateInput {
  answer: StringFieldUpdateOperationsInput
  answerModelId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  taskId: IntFieldUpdateOperationsInput
  userId: IntFieldUpdateOperationsInput
  verdict: NullableIntFieldUpdateOperationsInput
}

input TaskAnswerUncheckedUpdateManyInput {
  answer: StringFieldUpdateOperationsInput
  answerModelId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  taskId: IntFieldUpdateOperationsInput
  userId: IntFieldUpdateOperationsInput
  verdict: NullableIntFieldUpdateOperationsInput
}

input TaskAnswerUncheckedUpdateManyWithoutAnswerModelInput {
  answer: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  taskId: IntFieldUpdateOperationsInput
  userId: IntFieldUpdateOperationsInput
  verdict: NullableIntFieldUpdateOperationsInput
}

input TaskAnswerUncheckedUpdateManyWithoutAnswerModelNestedInput {
  connect: [TaskAnswerWhereUniqueInput]
  connectOrCreate: [TaskAnswerCreateOrConnectWithoutAnswerModelInput]
  create: [TaskAnswerCreateWithoutAnswerModelInput]
  createMany: TaskAnswerCreateManyAnswerModelInputEnvelope
  delete: [TaskAnswerWhereUniqueInput]
  deleteMany: [TaskAnswerScalarWhereInput]
  disconnect: [TaskAnswerWhereUniqueInput]
  set: [TaskAnswerWhereUniqueInput]
  update: [TaskAnswerUpdateWithWhereUniqueWithoutAnswerModelInput]
  updateMany: [TaskAnswerUpdateManyWithWhereWithoutAnswerModelInput]
  upsert: [TaskAnswerUpsertWithWhereUniqueWithoutAnswerModelInput]
}

input TaskAnswerUncheckedUpdateManyWithoutTaskInput {
  answer: StringFieldUpdateOperationsInput
  answerModelId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  userId: IntFieldUpdateOperationsInput
  verdict: NullableIntFieldUpdateOperationsInput
}

input TaskAnswerUncheckedUpdateManyWithoutTaskNestedInput {
  connect: [TaskAnswerWhereUniqueInput]
  connectOrCreate: [TaskAnswerCreateOrConnectWithoutTaskInput]
  create: [TaskAnswerCreateWithoutTaskInput]
  createMany: TaskAnswerCreateManyTaskInputEnvelope
  delete: [TaskAnswerWhereUniqueInput]
  deleteMany: [TaskAnswerScalarWhereInput]
  disconnect: [TaskAnswerWhereUniqueInput]
  set: [TaskAnswerWhereUniqueInput]
  update: [TaskAnswerUpdateWithWhereUniqueWithoutTaskInput]
  updateMany: [TaskAnswerUpdateManyWithWhereWithoutTaskInput]
  upsert: [TaskAnswerUpsertWithWhereUniqueWithoutTaskInput]
}

input TaskAnswerUncheckedUpdateManyWithoutUserInput {
  answer: StringFieldUpdateOperationsInput
  answerModelId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  taskId: IntFieldUpdateOperationsInput
  verdict: NullableIntFieldUpdateOperationsInput
}

input TaskAnswerUncheckedUpdateManyWithoutUserNestedInput {
  connect: [TaskAnswerWhereUniqueInput]
  connectOrCreate: [TaskAnswerCreateOrConnectWithoutUserInput]
  create: [TaskAnswerCreateWithoutUserInput]
  createMany: TaskAnswerCreateManyUserInputEnvelope
  delete: [TaskAnswerWhereUniqueInput]
  deleteMany: [TaskAnswerScalarWhereInput]
  disconnect: [TaskAnswerWhereUniqueInput]
  set: [TaskAnswerWhereUniqueInput]
  update: [TaskAnswerUpdateWithWhereUniqueWithoutUserInput]
  updateMany: [TaskAnswerUpdateManyWithWhereWithoutUserInput]
  upsert: [TaskAnswerUpsertWithWhereUniqueWithoutUserInput]
}

input TaskAnswerUncheckedUpdateWithoutAnswerModelInput {
  answer: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  taskId: IntFieldUpdateOperationsInput
  userId: IntFieldUpdateOperationsInput
  verdict: NullableIntFieldUpdateOperationsInput
}

input TaskAnswerUncheckedUpdateWithoutTaskInput {
  answer: StringFieldUpdateOperationsInput
  answerModelId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  userId: IntFieldUpdateOperationsInput
  verdict: NullableIntFieldUpdateOperationsInput
}

input TaskAnswerUncheckedUpdateWithoutUserInput {
  answer: StringFieldUpdateOperationsInput
  answerModelId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  taskId: IntFieldUpdateOperationsInput
  verdict: NullableIntFieldUpdateOperationsInput
}

input TaskAnswerUpdateInput {
  answer: StringFieldUpdateOperationsInput
  answerModel: AnswerUpdateOneRequiredWithoutTaskAnswersNestedInput
  task: TaskUpdateOneRequiredWithoutTaskAnswersNestedInput
  user: UserUpdateOneRequiredWithoutAnswersNestedInput
  verdict: NullableIntFieldUpdateOperationsInput
}

input TaskAnswerUpdateManyMutationInput {
  answer: StringFieldUpdateOperationsInput
  verdict: NullableIntFieldUpdateOperationsInput
}

input TaskAnswerUpdateManyWithWhereWithoutAnswerModelInput {
  data: TaskAnswerUpdateManyMutationInput!
  where: TaskAnswerScalarWhereInput!
}

input TaskAnswerUpdateManyWithWhereWithoutTaskInput {
  data: TaskAnswerUpdateManyMutationInput!
  where: TaskAnswerScalarWhereInput!
}

input TaskAnswerUpdateManyWithWhereWithoutUserInput {
  data: TaskAnswerUpdateManyMutationInput!
  where: TaskAnswerScalarWhereInput!
}

input TaskAnswerUpdateManyWithoutAnswerModelNestedInput {
  connect: [TaskAnswerWhereUniqueInput]
  connectOrCreate: [TaskAnswerCreateOrConnectWithoutAnswerModelInput]
  create: [TaskAnswerCreateWithoutAnswerModelInput]
  createMany: TaskAnswerCreateManyAnswerModelInputEnvelope
  delete: [TaskAnswerWhereUniqueInput]
  deleteMany: [TaskAnswerScalarWhereInput]
  disconnect: [TaskAnswerWhereUniqueInput]
  set: [TaskAnswerWhereUniqueInput]
  update: [TaskAnswerUpdateWithWhereUniqueWithoutAnswerModelInput]
  updateMany: [TaskAnswerUpdateManyWithWhereWithoutAnswerModelInput]
  upsert: [TaskAnswerUpsertWithWhereUniqueWithoutAnswerModelInput]
}

input TaskAnswerUpdateManyWithoutTaskNestedInput {
  connect: [TaskAnswerWhereUniqueInput]
  connectOrCreate: [TaskAnswerCreateOrConnectWithoutTaskInput]
  create: [TaskAnswerCreateWithoutTaskInput]
  createMany: TaskAnswerCreateManyTaskInputEnvelope
  delete: [TaskAnswerWhereUniqueInput]
  deleteMany: [TaskAnswerScalarWhereInput]
  disconnect: [TaskAnswerWhereUniqueInput]
  set: [TaskAnswerWhereUniqueInput]
  update: [TaskAnswerUpdateWithWhereUniqueWithoutTaskInput]
  updateMany: [TaskAnswerUpdateManyWithWhereWithoutTaskInput]
  upsert: [TaskAnswerUpsertWithWhereUniqueWithoutTaskInput]
}

input TaskAnswerUpdateManyWithoutUserNestedInput {
  connect: [TaskAnswerWhereUniqueInput]
  connectOrCreate: [TaskAnswerCreateOrConnectWithoutUserInput]
  create: [TaskAnswerCreateWithoutUserInput]
  createMany: TaskAnswerCreateManyUserInputEnvelope
  delete: [TaskAnswerWhereUniqueInput]
  deleteMany: [TaskAnswerScalarWhereInput]
  disconnect: [TaskAnswerWhereUniqueInput]
  set: [TaskAnswerWhereUniqueInput]
  update: [TaskAnswerUpdateWithWhereUniqueWithoutUserInput]
  updateMany: [TaskAnswerUpdateManyWithWhereWithoutUserInput]
  upsert: [TaskAnswerUpsertWithWhereUniqueWithoutUserInput]
}

input TaskAnswerUpdateWithWhereUniqueWithoutAnswerModelInput {
  data: TaskAnswerUpdateWithoutAnswerModelInput!
  where: TaskAnswerWhereUniqueInput!
}

input TaskAnswerUpdateWithWhereUniqueWithoutTaskInput {
  data: TaskAnswerUpdateWithoutTaskInput!
  where: TaskAnswerWhereUniqueInput!
}

input TaskAnswerUpdateWithWhereUniqueWithoutUserInput {
  data: TaskAnswerUpdateWithoutUserInput!
  where: TaskAnswerWhereUniqueInput!
}

input TaskAnswerUpdateWithoutAnswerModelInput {
  answer: StringFieldUpdateOperationsInput
  task: TaskUpdateOneRequiredWithoutTaskAnswersNestedInput
  user: UserUpdateOneRequiredWithoutAnswersNestedInput
  verdict: NullableIntFieldUpdateOperationsInput
}

input TaskAnswerUpdateWithoutTaskInput {
  answer: StringFieldUpdateOperationsInput
  answerModel: AnswerUpdateOneRequiredWithoutTaskAnswersNestedInput
  user: UserUpdateOneRequiredWithoutAnswersNestedInput
  verdict: NullableIntFieldUpdateOperationsInput
}

input TaskAnswerUpdateWithoutUserInput {
  answer: StringFieldUpdateOperationsInput
  answerModel: AnswerUpdateOneRequiredWithoutTaskAnswersNestedInput
  task: TaskUpdateOneRequiredWithoutTaskAnswersNestedInput
  verdict: NullableIntFieldUpdateOperationsInput
}

input TaskAnswerUpsertWithWhereUniqueWithoutAnswerModelInput {
  create: TaskAnswerCreateWithoutAnswerModelInput!
  update: TaskAnswerUpdateWithoutAnswerModelInput!
  where: TaskAnswerWhereUniqueInput!
}

input TaskAnswerUpsertWithWhereUniqueWithoutTaskInput {
  create: TaskAnswerCreateWithoutTaskInput!
  update: TaskAnswerUpdateWithoutTaskInput!
  where: TaskAnswerWhereUniqueInput!
}

input TaskAnswerUpsertWithWhereUniqueWithoutUserInput {
  create: TaskAnswerCreateWithoutUserInput!
  update: TaskAnswerUpdateWithoutUserInput!
  where: TaskAnswerWhereUniqueInput!
}

input TaskAnswerWhereInput {
  AND: [TaskAnswerWhereInput]
  NOT: [TaskAnswerWhereInput]
  OR: [TaskAnswerWhereInput]
  answer: StringFilter
  answerModel: AnswerRelationFilter
  answerModelId: IntFilter
  id: IntFilter
  task: TaskRelationFilter
  taskId: IntFilter
  user: UserRelationFilter
  userId: IntFilter
  verdict: IntNullableFilter
}

input TaskAnswerWhereUniqueInput {
  AND: [TaskAnswerWhereInput]
  NOT: [TaskAnswerWhereInput]
  OR: [TaskAnswerWhereInput]
  answer: StringFilter
  answerModel: AnswerRelationFilter
  answerModelId: IntFilter
  id: Int
  task: TaskRelationFilter
  taskId: IntFilter
  user: UserRelationFilter
  userId: IntFilter
  verdict: IntNullableFilter
}

type TaskAvgAggregateOutputType {
  correctMultipleAnswer: Float
  correctSingleAnswer: Float
  id: Float
  testId: Float
}

input TaskAvgOrderByAggregateInput {
  correctMultipleAnswer: SortOrder
  correctSingleAnswer: SortOrder
  id: SortOrder
  testId: SortOrder
}

type TaskCountAggregateOutputType {
  _all: Int!
  code: Int!
  correctMultipleAnswer: Int!
  correctSingleAnswer: Int!
  createdAt: Int!
  id: Int!
  question: Int!
  testId: Int!
  type: Int!
  variants: Int!
}

input TaskCountOrderByAggregateInput {
  code: SortOrder
  correctMultipleAnswer: SortOrder
  correctSingleAnswer: SortOrder
  createdAt: SortOrder
  id: SortOrder
  question: SortOrder
  testId: SortOrder
  type: SortOrder
  variants: SortOrder
}

type TaskCountOutputType {
  taskAnswers: Int!
}

input TaskCreateInput {
  code: String
  correctMultipleAnswer: [Int]
  correctSingleAnswer: Int
  createdAt: DateTime
  question: String!
  taskAnswers: TaskAnswerCreateNestedManyWithoutTaskInput
  test: TestCreateNestedOneWithoutTasksInput
  type: TaskType!
  variants: [String]
}

input TaskCreateManyInput {
  code: String
  correctMultipleAnswer: [Int]
  correctSingleAnswer: Int
  createdAt: DateTime
  id: Int
  question: String!
  testId: Int
  type: TaskType!
  variants: [String]
}

input TaskCreateManyTestInput {
  code: String
  correctMultipleAnswer: [Int]
  correctSingleAnswer: Int
  createdAt: DateTime
  id: Int
  question: String!
  type: TaskType!
  variants: [String]
}

input TaskCreateManyTestInputEnvelope {
  data: TaskCreateManyTestInput!
  skipDuplicates: Boolean
}

input TaskCreateNestedManyWithoutTestInput {
  connect: [TaskWhereUniqueInput]
  connectOrCreate: [TaskCreateOrConnectWithoutTestInput]
  create: [TaskCreateWithoutTestInput]
  createMany: TaskCreateManyTestInputEnvelope
}

input TaskCreateNestedOneWithoutTaskAnswersInput {
  connect: TaskWhereUniqueInput
  connectOrCreate: TaskCreateOrConnectWithoutTaskAnswersInput
  create: TaskCreateWithoutTaskAnswersInput
}

input TaskCreateOrConnectWithoutTaskAnswersInput {
  create: TaskCreateWithoutTaskAnswersInput!
  where: TaskWhereUniqueInput!
}

input TaskCreateOrConnectWithoutTestInput {
  create: TaskCreateWithoutTestInput!
  where: TaskWhereUniqueInput!
}

input TaskCreateWithoutTaskAnswersInput {
  code: String
  correctMultipleAnswer: [Int]
  correctSingleAnswer: Int
  createdAt: DateTime
  question: String!
  test: TestCreateNestedOneWithoutTasksInput
  type: TaskType!
  variants: [String]
}

input TaskCreateWithoutTestInput {
  code: String
  correctMultipleAnswer: [Int]
  correctSingleAnswer: Int
  createdAt: DateTime
  question: String!
  taskAnswers: TaskAnswerCreateNestedManyWithoutTaskInput
  type: TaskType!
  variants: [String]
}

input TaskCreatecorrectMultipleAnswerInput {
  set: Int!
}

input TaskCreatevariantsInput {
  set: String!
}

input TaskListRelationFilter {
  every: TaskWhereInput
  none: TaskWhereInput
  some: TaskWhereInput
}

type TaskMaxAggregateOutputType {
  code: String
  correctSingleAnswer: Int
  createdAt: DateTime
  id: Int
  question: String
  testId: Int
  type: TaskType
}

input TaskMaxOrderByAggregateInput {
  code: SortOrder
  correctSingleAnswer: SortOrder
  createdAt: SortOrder
  id: SortOrder
  question: SortOrder
  testId: SortOrder
  type: SortOrder
}

type TaskMinAggregateOutputType {
  code: String
  correctSingleAnswer: Int
  createdAt: DateTime
  id: Int
  question: String
  testId: Int
  type: TaskType
}

input TaskMinOrderByAggregateInput {
  code: SortOrder
  correctSingleAnswer: SortOrder
  createdAt: SortOrder
  id: SortOrder
  question: SortOrder
  testId: SortOrder
  type: SortOrder
}

input TaskOrderByRelationAggregateInput {
  _count: SortOrder
}

input TaskOrderByWithAggregationInput {
  _avg: TaskAvgOrderByAggregateInput
  _count: TaskCountOrderByAggregateInput
  _max: TaskMaxOrderByAggregateInput
  _min: TaskMinOrderByAggregateInput
  _sum: TaskSumOrderByAggregateInput
  code: SortOrderInput
  correctMultipleAnswer: SortOrder
  correctSingleAnswer: SortOrderInput
  createdAt: SortOrder
  id: SortOrder
  question: SortOrder
  testId: SortOrderInput
  type: SortOrder
  variants: SortOrder
}

input TaskOrderByWithRelationInput {
  code: SortOrderInput
  correctMultipleAnswer: SortOrder
  correctSingleAnswer: SortOrderInput
  createdAt: SortOrder
  id: SortOrder
  question: SortOrder
  taskAnswers: TaskAnswerOrderByRelationAggregateInput
  test: TestOrderByWithRelationInput
  testId: SortOrderInput
  type: SortOrder
  variants: SortOrder
}

input TaskRelationFilter {
  is: TaskWhereInput
  isNot: TaskWhereInput
}

enum TaskScalarFieldEnum {
  code
  correctMultipleAnswer
  correctSingleAnswer
  createdAt
  id
  question
  testId
  type
  variants
}

input TaskScalarWhereInput {
  AND: [TaskScalarWhereInput]
  NOT: [TaskScalarWhereInput]
  OR: [TaskScalarWhereInput]
  code: StringNullableFilter
  correctMultipleAnswer: IntNullableListFilter
  correctSingleAnswer: IntNullableFilter
  createdAt: DateTimeFilter
  id: IntFilter
  question: StringFilter
  testId: IntNullableFilter
  type: EnumTaskTypeFilter
  variants: StringNullableListFilter
}

input TaskScalarWhereWithAggregatesInput {
  AND: [TaskScalarWhereWithAggregatesInput]
  NOT: [TaskScalarWhereWithAggregatesInput]
  OR: [TaskScalarWhereWithAggregatesInput]
  code: StringNullableWithAggregatesFilter
  correctMultipleAnswer: IntNullableListFilter
  correctSingleAnswer: IntNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  question: StringWithAggregatesFilter
  testId: IntNullableWithAggregatesFilter
  type: EnumTaskTypeWithAggregatesFilter
  variants: StringNullableListFilter
}

type TaskSumAggregateOutputType {
  correctMultipleAnswer: Int
  correctSingleAnswer: Int
  id: Int
  testId: Int
}

input TaskSumOrderByAggregateInput {
  correctMultipleAnswer: SortOrder
  correctSingleAnswer: SortOrder
  id: SortOrder
  testId: SortOrder
}

enum TaskType {
  codeResponse
  detailedResponse
  multipleResponse
  singleResponse
}

input TaskUncheckedCreateInput {
  code: String
  correctMultipleAnswer: [Int]
  correctSingleAnswer: Int
  createdAt: DateTime
  id: Int
  question: String!
  taskAnswers: TaskAnswerUncheckedCreateNestedManyWithoutTaskInput
  testId: Int
  type: TaskType!
  variants: [String]
}

input TaskUncheckedCreateNestedManyWithoutTestInput {
  connect: [TaskWhereUniqueInput]
  connectOrCreate: [TaskCreateOrConnectWithoutTestInput]
  create: [TaskCreateWithoutTestInput]
  createMany: TaskCreateManyTestInputEnvelope
}

input TaskUncheckedCreateWithoutTaskAnswersInput {
  code: String
  correctMultipleAnswer: [Int]
  correctSingleAnswer: Int
  createdAt: DateTime
  id: Int
  question: String!
  testId: Int
  type: TaskType!
  variants: [String]
}

input TaskUncheckedCreateWithoutTestInput {
  code: String
  correctMultipleAnswer: [Int]
  correctSingleAnswer: Int
  createdAt: DateTime
  id: Int
  question: String!
  taskAnswers: TaskAnswerUncheckedCreateNestedManyWithoutTaskInput
  type: TaskType!
  variants: [String]
}

input TaskUncheckedUpdateInput {
  code: NullableStringFieldUpdateOperationsInput
  correctMultipleAnswer: [Int]
  correctSingleAnswer: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  question: StringFieldUpdateOperationsInput
  taskAnswers: TaskAnswerUncheckedUpdateManyWithoutTaskNestedInput
  testId: NullableIntFieldUpdateOperationsInput
  type: EnumTaskTypeFieldUpdateOperationsInput
  variants: [String]
}

input TaskUncheckedUpdateManyInput {
  code: NullableStringFieldUpdateOperationsInput
  correctMultipleAnswer: [Int]
  correctSingleAnswer: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  question: StringFieldUpdateOperationsInput
  testId: NullableIntFieldUpdateOperationsInput
  type: EnumTaskTypeFieldUpdateOperationsInput
  variants: [String]
}

input TaskUncheckedUpdateManyWithoutTestInput {
  code: NullableStringFieldUpdateOperationsInput
  correctMultipleAnswer: [Int]
  correctSingleAnswer: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  question: StringFieldUpdateOperationsInput
  type: EnumTaskTypeFieldUpdateOperationsInput
  variants: [String]
}

input TaskUncheckedUpdateManyWithoutTestNestedInput {
  connect: [TaskWhereUniqueInput]
  connectOrCreate: [TaskCreateOrConnectWithoutTestInput]
  create: [TaskCreateWithoutTestInput]
  createMany: TaskCreateManyTestInputEnvelope
  delete: [TaskWhereUniqueInput]
  deleteMany: [TaskScalarWhereInput]
  disconnect: [TaskWhereUniqueInput]
  set: [TaskWhereUniqueInput]
  update: [TaskUpdateWithWhereUniqueWithoutTestInput]
  updateMany: [TaskUpdateManyWithWhereWithoutTestInput]
  upsert: [TaskUpsertWithWhereUniqueWithoutTestInput]
}

input TaskUncheckedUpdateWithoutTaskAnswersInput {
  code: NullableStringFieldUpdateOperationsInput
  correctMultipleAnswer: [Int]
  correctSingleAnswer: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  question: StringFieldUpdateOperationsInput
  testId: NullableIntFieldUpdateOperationsInput
  type: EnumTaskTypeFieldUpdateOperationsInput
  variants: [String]
}

input TaskUncheckedUpdateWithoutTestInput {
  code: NullableStringFieldUpdateOperationsInput
  correctMultipleAnswer: [Int]
  correctSingleAnswer: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  question: StringFieldUpdateOperationsInput
  taskAnswers: TaskAnswerUncheckedUpdateManyWithoutTaskNestedInput
  type: EnumTaskTypeFieldUpdateOperationsInput
  variants: [String]
}

input TaskUpdateInput {
  code: NullableStringFieldUpdateOperationsInput
  correctMultipleAnswer: [Int]
  correctSingleAnswer: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  question: StringFieldUpdateOperationsInput
  taskAnswers: TaskAnswerUpdateManyWithoutTaskNestedInput
  test: TestUpdateOneWithoutTasksNestedInput
  type: EnumTaskTypeFieldUpdateOperationsInput
  variants: [String]
}

input TaskUpdateManyMutationInput {
  code: NullableStringFieldUpdateOperationsInput
  correctMultipleAnswer: [Int]
  correctSingleAnswer: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  question: StringFieldUpdateOperationsInput
  type: EnumTaskTypeFieldUpdateOperationsInput
  variants: [String]
}

input TaskUpdateManyWithWhereWithoutTestInput {
  data: TaskUpdateManyMutationInput!
  where: TaskScalarWhereInput!
}

input TaskUpdateManyWithoutTestNestedInput {
  connect: [TaskWhereUniqueInput]
  connectOrCreate: [TaskCreateOrConnectWithoutTestInput]
  create: [TaskCreateWithoutTestInput]
  createMany: TaskCreateManyTestInputEnvelope
  delete: [TaskWhereUniqueInput]
  deleteMany: [TaskScalarWhereInput]
  disconnect: [TaskWhereUniqueInput]
  set: [TaskWhereUniqueInput]
  update: [TaskUpdateWithWhereUniqueWithoutTestInput]
  updateMany: [TaskUpdateManyWithWhereWithoutTestInput]
  upsert: [TaskUpsertWithWhereUniqueWithoutTestInput]
}

input TaskUpdateOneRequiredWithoutTaskAnswersNestedInput {
  connect: TaskWhereUniqueInput
  connectOrCreate: TaskCreateOrConnectWithoutTaskAnswersInput
  create: TaskCreateWithoutTaskAnswersInput
  update: TaskUpdateToOneWithWhereWithoutTaskAnswersInput
  upsert: TaskUpsertWithoutTaskAnswersInput
}

input TaskUpdateToOneWithWhereWithoutTaskAnswersInput {
  data: TaskUpdateWithoutTaskAnswersInput!
  where: TaskWhereInput
}

input TaskUpdateWithWhereUniqueWithoutTestInput {
  data: TaskUpdateWithoutTestInput!
  where: TaskWhereUniqueInput!
}

input TaskUpdateWithoutTaskAnswersInput {
  code: NullableStringFieldUpdateOperationsInput
  correctMultipleAnswer: [Int]
  correctSingleAnswer: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  question: StringFieldUpdateOperationsInput
  test: TestUpdateOneWithoutTasksNestedInput
  type: EnumTaskTypeFieldUpdateOperationsInput
  variants: [String]
}

input TaskUpdateWithoutTestInput {
  code: NullableStringFieldUpdateOperationsInput
  correctMultipleAnswer: [Int]
  correctSingleAnswer: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  question: StringFieldUpdateOperationsInput
  taskAnswers: TaskAnswerUpdateManyWithoutTaskNestedInput
  type: EnumTaskTypeFieldUpdateOperationsInput
  variants: [String]
}

input TaskUpdatecorrectMultipleAnswerInput {
  push: [Int]
  set: [Int]
}

input TaskUpdatevariantsInput {
  push: [String]
  set: [String]
}

input TaskUpsertWithWhereUniqueWithoutTestInput {
  create: TaskCreateWithoutTestInput!
  update: TaskUpdateWithoutTestInput!
  where: TaskWhereUniqueInput!
}

input TaskUpsertWithoutTaskAnswersInput {
  create: TaskCreateWithoutTaskAnswersInput!
  update: TaskUpdateWithoutTaskAnswersInput!
  where: TaskWhereInput
}

input TaskWhereInput {
  AND: [TaskWhereInput]
  NOT: [TaskWhereInput]
  OR: [TaskWhereInput]
  code: StringNullableFilter
  correctMultipleAnswer: IntNullableListFilter
  correctSingleAnswer: IntNullableFilter
  createdAt: DateTimeFilter
  id: IntFilter
  question: StringFilter
  taskAnswers: TaskAnswerListRelationFilter
  test: TestNullableRelationFilter
  testId: IntNullableFilter
  type: EnumTaskTypeFilter
  variants: StringNullableListFilter
}

input TaskWhereUniqueInput {
  AND: [TaskWhereInput]
  NOT: [TaskWhereInput]
  OR: [TaskWhereInput]
  code: StringNullableFilter
  correctMultipleAnswer: IntNullableListFilter
  correctSingleAnswer: IntNullableFilter
  createdAt: DateTimeFilter
  id: Int
  question: StringFilter
  taskAnswers: TaskAnswerListRelationFilter
  test: TestNullableRelationFilter
  testId: IntNullableFilter
  type: EnumTaskTypeFilter
  variants: StringNullableListFilter
}

type Test {
  _count: TestCountOutputType!
  answers(cursor: AnswerWhereUniqueInput, distinct: [AnswerScalarFieldEnum], orderBy: [AnswerOrderByWithRelationInput], skip: Int, take: Int, where: AnswerWhereInput): [Answer!]!
  createdAt: DateTime!
  direction(cursor: DirectionWhereUniqueInput, distinct: [DirectionScalarFieldEnum], orderBy: [DirectionOrderByWithRelationInput], skip: Int, take: Int, where: DirectionWhereInput): [Direction!]!
  id: Int!
  response(cursor: ResponseWhereUniqueInput, distinct: [ResponseScalarFieldEnum], orderBy: [ResponseOrderByWithRelationInput], skip: Int, take: Int, where: ResponseWhereInput): [Response!]!
  tasks(cursor: TaskWhereUniqueInput, distinct: [TaskScalarFieldEnum], orderBy: [TaskOrderByWithRelationInput], skip: Int, take: Int, where: TaskWhereInput): [Task!]!
  title: String!
}

type TestAvgAggregateOutputType {
  id: Float
}

input TestAvgOrderByAggregateInput {
  id: SortOrder
}

type TestCountAggregateOutputType {
  _all: Int!
  createdAt: Int!
  id: Int!
  title: Int!
}

input TestCountOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  title: SortOrder
}

type TestCountOutputType {
  answers: Int!
  direction: Int!
  response: Int!
  tasks: Int!
}

input TestCreateInput {
  answers: AnswerCreateNestedManyWithoutTestInput
  createdAt: DateTime
  direction: DirectionCreateNestedManyWithoutTestInput
  response: ResponseCreateNestedManyWithoutTestsInput
  tasks: TaskCreateNestedManyWithoutTestInput
  title: String!
}

input TestCreateManyInput {
  createdAt: DateTime
  id: Int
  title: String!
}

input TestCreateNestedManyWithoutResponseInput {
  connect: [TestWhereUniqueInput]
  connectOrCreate: [TestCreateOrConnectWithoutResponseInput]
  create: [TestCreateWithoutResponseInput]
}

input TestCreateNestedOneWithoutAnswersInput {
  connect: TestWhereUniqueInput
  connectOrCreate: TestCreateOrConnectWithoutAnswersInput
  create: TestCreateWithoutAnswersInput
}

input TestCreateNestedOneWithoutDirectionInput {
  connect: TestWhereUniqueInput
  connectOrCreate: TestCreateOrConnectWithoutDirectionInput
  create: TestCreateWithoutDirectionInput
}

input TestCreateNestedOneWithoutTasksInput {
  connect: TestWhereUniqueInput
  connectOrCreate: TestCreateOrConnectWithoutTasksInput
  create: TestCreateWithoutTasksInput
}

input TestCreateOrConnectWithoutAnswersInput {
  create: TestCreateWithoutAnswersInput!
  where: TestWhereUniqueInput!
}

input TestCreateOrConnectWithoutDirectionInput {
  create: TestCreateWithoutDirectionInput!
  where: TestWhereUniqueInput!
}

input TestCreateOrConnectWithoutResponseInput {
  create: TestCreateWithoutResponseInput!
  where: TestWhereUniqueInput!
}

input TestCreateOrConnectWithoutTasksInput {
  create: TestCreateWithoutTasksInput!
  where: TestWhereUniqueInput!
}

input TestCreateWithoutAnswersInput {
  createdAt: DateTime
  direction: DirectionCreateNestedManyWithoutTestInput
  response: ResponseCreateNestedManyWithoutTestsInput
  tasks: TaskCreateNestedManyWithoutTestInput
  title: String!
}

input TestCreateWithoutDirectionInput {
  answers: AnswerCreateNestedManyWithoutTestInput
  createdAt: DateTime
  response: ResponseCreateNestedManyWithoutTestsInput
  tasks: TaskCreateNestedManyWithoutTestInput
  title: String!
}

input TestCreateWithoutResponseInput {
  answers: AnswerCreateNestedManyWithoutTestInput
  createdAt: DateTime
  direction: DirectionCreateNestedManyWithoutTestInput
  tasks: TaskCreateNestedManyWithoutTestInput
  title: String!
}

input TestCreateWithoutTasksInput {
  answers: AnswerCreateNestedManyWithoutTestInput
  createdAt: DateTime
  direction: DirectionCreateNestedManyWithoutTestInput
  response: ResponseCreateNestedManyWithoutTestsInput
  title: String!
}

input TestListRelationFilter {
  every: TestWhereInput
  none: TestWhereInput
  some: TestWhereInput
}

type TestMaxAggregateOutputType {
  createdAt: DateTime
  id: Int
  title: String
}

input TestMaxOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  title: SortOrder
}

type TestMinAggregateOutputType {
  createdAt: DateTime
  id: Int
  title: String
}

input TestMinOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  title: SortOrder
}

input TestNullableRelationFilter {
  is: TestWhereInput
  isNot: TestWhereInput
}

input TestOrderByRelationAggregateInput {
  _count: SortOrder
}

input TestOrderByWithAggregationInput {
  _avg: TestAvgOrderByAggregateInput
  _count: TestCountOrderByAggregateInput
  _max: TestMaxOrderByAggregateInput
  _min: TestMinOrderByAggregateInput
  _sum: TestSumOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  title: SortOrder
}

input TestOrderByWithRelationInput {
  answers: AnswerOrderByRelationAggregateInput
  createdAt: SortOrder
  direction: DirectionOrderByRelationAggregateInput
  id: SortOrder
  response: ResponseOrderByRelationAggregateInput
  tasks: TaskOrderByRelationAggregateInput
  title: SortOrder
}

input TestRelationFilter {
  is: TestWhereInput
  isNot: TestWhereInput
}

enum TestScalarFieldEnum {
  createdAt
  id
  title
}

input TestScalarWhereInput {
  AND: [TestScalarWhereInput]
  NOT: [TestScalarWhereInput]
  OR: [TestScalarWhereInput]
  createdAt: DateTimeFilter
  id: IntFilter
  title: StringFilter
}

input TestScalarWhereWithAggregatesInput {
  AND: [TestScalarWhereWithAggregatesInput]
  NOT: [TestScalarWhereWithAggregatesInput]
  OR: [TestScalarWhereWithAggregatesInput]
  createdAt: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  title: StringWithAggregatesFilter
}

type TestSumAggregateOutputType {
  id: Int
}

input TestSumOrderByAggregateInput {
  id: SortOrder
}

input TestUncheckedCreateInput {
  answers: AnswerUncheckedCreateNestedManyWithoutTestInput
  createdAt: DateTime
  direction: DirectionUncheckedCreateNestedManyWithoutTestInput
  id: Int
  response: ResponseUncheckedCreateNestedManyWithoutTestsInput
  tasks: TaskUncheckedCreateNestedManyWithoutTestInput
  title: String!
}

input TestUncheckedCreateNestedManyWithoutResponseInput {
  connect: [TestWhereUniqueInput]
  connectOrCreate: [TestCreateOrConnectWithoutResponseInput]
  create: [TestCreateWithoutResponseInput]
}

input TestUncheckedCreateWithoutAnswersInput {
  createdAt: DateTime
  direction: DirectionUncheckedCreateNestedManyWithoutTestInput
  id: Int
  response: ResponseUncheckedCreateNestedManyWithoutTestsInput
  tasks: TaskUncheckedCreateNestedManyWithoutTestInput
  title: String!
}

input TestUncheckedCreateWithoutDirectionInput {
  answers: AnswerUncheckedCreateNestedManyWithoutTestInput
  createdAt: DateTime
  id: Int
  response: ResponseUncheckedCreateNestedManyWithoutTestsInput
  tasks: TaskUncheckedCreateNestedManyWithoutTestInput
  title: String!
}

input TestUncheckedCreateWithoutResponseInput {
  answers: AnswerUncheckedCreateNestedManyWithoutTestInput
  createdAt: DateTime
  direction: DirectionUncheckedCreateNestedManyWithoutTestInput
  id: Int
  tasks: TaskUncheckedCreateNestedManyWithoutTestInput
  title: String!
}

input TestUncheckedCreateWithoutTasksInput {
  answers: AnswerUncheckedCreateNestedManyWithoutTestInput
  createdAt: DateTime
  direction: DirectionUncheckedCreateNestedManyWithoutTestInput
  id: Int
  response: ResponseUncheckedCreateNestedManyWithoutTestsInput
  title: String!
}

input TestUncheckedUpdateInput {
  answers: AnswerUncheckedUpdateManyWithoutTestNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  direction: DirectionUncheckedUpdateManyWithoutTestNestedInput
  id: IntFieldUpdateOperationsInput
  response: ResponseUncheckedUpdateManyWithoutTestsNestedInput
  tasks: TaskUncheckedUpdateManyWithoutTestNestedInput
  title: StringFieldUpdateOperationsInput
}

input TestUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input TestUncheckedUpdateManyWithoutResponseInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input TestUncheckedUpdateManyWithoutResponseNestedInput {
  connect: [TestWhereUniqueInput]
  connectOrCreate: [TestCreateOrConnectWithoutResponseInput]
  create: [TestCreateWithoutResponseInput]
  delete: [TestWhereUniqueInput]
  deleteMany: [TestScalarWhereInput]
  disconnect: [TestWhereUniqueInput]
  set: [TestWhereUniqueInput]
  update: [TestUpdateWithWhereUniqueWithoutResponseInput]
  updateMany: [TestUpdateManyWithWhereWithoutResponseInput]
  upsert: [TestUpsertWithWhereUniqueWithoutResponseInput]
}

input TestUncheckedUpdateWithoutAnswersInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  direction: DirectionUncheckedUpdateManyWithoutTestNestedInput
  id: IntFieldUpdateOperationsInput
  response: ResponseUncheckedUpdateManyWithoutTestsNestedInput
  tasks: TaskUncheckedUpdateManyWithoutTestNestedInput
  title: StringFieldUpdateOperationsInput
}

input TestUncheckedUpdateWithoutDirectionInput {
  answers: AnswerUncheckedUpdateManyWithoutTestNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  response: ResponseUncheckedUpdateManyWithoutTestsNestedInput
  tasks: TaskUncheckedUpdateManyWithoutTestNestedInput
  title: StringFieldUpdateOperationsInput
}

input TestUncheckedUpdateWithoutResponseInput {
  answers: AnswerUncheckedUpdateManyWithoutTestNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  direction: DirectionUncheckedUpdateManyWithoutTestNestedInput
  id: IntFieldUpdateOperationsInput
  tasks: TaskUncheckedUpdateManyWithoutTestNestedInput
  title: StringFieldUpdateOperationsInput
}

input TestUncheckedUpdateWithoutTasksInput {
  answers: AnswerUncheckedUpdateManyWithoutTestNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  direction: DirectionUncheckedUpdateManyWithoutTestNestedInput
  id: IntFieldUpdateOperationsInput
  response: ResponseUncheckedUpdateManyWithoutTestsNestedInput
  title: StringFieldUpdateOperationsInput
}

input TestUpdateInput {
  answers: AnswerUpdateManyWithoutTestNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  direction: DirectionUpdateManyWithoutTestNestedInput
  response: ResponseUpdateManyWithoutTestsNestedInput
  tasks: TaskUpdateManyWithoutTestNestedInput
  title: StringFieldUpdateOperationsInput
}

input TestUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input TestUpdateManyWithWhereWithoutResponseInput {
  data: TestUpdateManyMutationInput!
  where: TestScalarWhereInput!
}

input TestUpdateManyWithoutResponseNestedInput {
  connect: [TestWhereUniqueInput]
  connectOrCreate: [TestCreateOrConnectWithoutResponseInput]
  create: [TestCreateWithoutResponseInput]
  delete: [TestWhereUniqueInput]
  deleteMany: [TestScalarWhereInput]
  disconnect: [TestWhereUniqueInput]
  set: [TestWhereUniqueInput]
  update: [TestUpdateWithWhereUniqueWithoutResponseInput]
  updateMany: [TestUpdateManyWithWhereWithoutResponseInput]
  upsert: [TestUpsertWithWhereUniqueWithoutResponseInput]
}

input TestUpdateOneRequiredWithoutAnswersNestedInput {
  connect: TestWhereUniqueInput
  connectOrCreate: TestCreateOrConnectWithoutAnswersInput
  create: TestCreateWithoutAnswersInput
  update: TestUpdateToOneWithWhereWithoutAnswersInput
  upsert: TestUpsertWithoutAnswersInput
}

input TestUpdateOneWithoutDirectionNestedInput {
  connect: TestWhereUniqueInput
  connectOrCreate: TestCreateOrConnectWithoutDirectionInput
  create: TestCreateWithoutDirectionInput
  delete: TestWhereInput
  disconnect: TestWhereInput
  update: TestUpdateToOneWithWhereWithoutDirectionInput
  upsert: TestUpsertWithoutDirectionInput
}

input TestUpdateOneWithoutTasksNestedInput {
  connect: TestWhereUniqueInput
  connectOrCreate: TestCreateOrConnectWithoutTasksInput
  create: TestCreateWithoutTasksInput
  delete: TestWhereInput
  disconnect: TestWhereInput
  update: TestUpdateToOneWithWhereWithoutTasksInput
  upsert: TestUpsertWithoutTasksInput
}

input TestUpdateToOneWithWhereWithoutAnswersInput {
  data: TestUpdateWithoutAnswersInput!
  where: TestWhereInput
}

input TestUpdateToOneWithWhereWithoutDirectionInput {
  data: TestUpdateWithoutDirectionInput!
  where: TestWhereInput
}

input TestUpdateToOneWithWhereWithoutTasksInput {
  data: TestUpdateWithoutTasksInput!
  where: TestWhereInput
}

input TestUpdateWithWhereUniqueWithoutResponseInput {
  data: TestUpdateWithoutResponseInput!
  where: TestWhereUniqueInput!
}

input TestUpdateWithoutAnswersInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  direction: DirectionUpdateManyWithoutTestNestedInput
  response: ResponseUpdateManyWithoutTestsNestedInput
  tasks: TaskUpdateManyWithoutTestNestedInput
  title: StringFieldUpdateOperationsInput
}

input TestUpdateWithoutDirectionInput {
  answers: AnswerUpdateManyWithoutTestNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  response: ResponseUpdateManyWithoutTestsNestedInput
  tasks: TaskUpdateManyWithoutTestNestedInput
  title: StringFieldUpdateOperationsInput
}

input TestUpdateWithoutResponseInput {
  answers: AnswerUpdateManyWithoutTestNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  direction: DirectionUpdateManyWithoutTestNestedInput
  tasks: TaskUpdateManyWithoutTestNestedInput
  title: StringFieldUpdateOperationsInput
}

input TestUpdateWithoutTasksInput {
  answers: AnswerUpdateManyWithoutTestNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  direction: DirectionUpdateManyWithoutTestNestedInput
  response: ResponseUpdateManyWithoutTestsNestedInput
  title: StringFieldUpdateOperationsInput
}

input TestUpsertWithWhereUniqueWithoutResponseInput {
  create: TestCreateWithoutResponseInput!
  update: TestUpdateWithoutResponseInput!
  where: TestWhereUniqueInput!
}

input TestUpsertWithoutAnswersInput {
  create: TestCreateWithoutAnswersInput!
  update: TestUpdateWithoutAnswersInput!
  where: TestWhereInput
}

input TestUpsertWithoutDirectionInput {
  create: TestCreateWithoutDirectionInput!
  update: TestUpdateWithoutDirectionInput!
  where: TestWhereInput
}

input TestUpsertWithoutTasksInput {
  create: TestCreateWithoutTasksInput!
  update: TestUpdateWithoutTasksInput!
  where: TestWhereInput
}

input TestWhereInput {
  AND: [TestWhereInput]
  NOT: [TestWhereInput]
  OR: [TestWhereInput]
  answers: AnswerListRelationFilter
  createdAt: DateTimeFilter
  direction: DirectionListRelationFilter
  id: IntFilter
  response: ResponseListRelationFilter
  tasks: TaskListRelationFilter
  title: StringFilter
}

input TestWhereUniqueInput {
  AND: [TestWhereInput]
  NOT: [TestWhereInput]
  OR: [TestWhereInput]
  answers: AnswerListRelationFilter
  createdAt: DateTimeFilter
  direction: DirectionListRelationFilter
  id: Int
  response: ResponseListRelationFilter
  tasks: TaskListRelationFilter
  title: StringFilter
}

enum TransactionIsolationLevel {
  ReadCommitted
  ReadUncommitted
  RepeatableRead
  Serializable
}

input UpdateFieldInput {
  create: Boolean
  editor: Boolean
  filter: Boolean
  id: String
  isId: Boolean
  kind: KindEnum
  list: Boolean
  name: String
  order: Int
  read: Boolean
  relationField: Boolean
  required: Boolean
  sort: Boolean
  title: String
  type: String
  unique: Boolean
  update: Boolean
  upload: Boolean
}

input UpdateModelInput {
  create: Boolean
  delete: Boolean
  displayFields: [String]
  fields: [UpdateFieldInput]
  idField: String
  name: String
  update: Boolean
}

type User {
  _count: UserCountOutputType!
  answers(cursor: TaskAnswerWhereUniqueInput, distinct: [TaskAnswerScalarFieldEnum], orderBy: [TaskAnswerOrderByWithRelationInput], skip: Int, take: Int, where: TaskAnswerWhereInput): [TaskAnswer!]!
  createdAt: DateTime!
  email: String!
  fullname: String
  groups(cursor: MessagerGroupWhereUniqueInput, distinct: [MessagerGroupScalarFieldEnum], orderBy: [MessagerGroupOrderByWithRelationInput], skip: Int, take: Int, where: MessagerGroupWhereInput): [MessagerGroup!]!
  id: Int!
  logo: String
  messages(cursor: MessageWhereUniqueInput, distinct: [MessageScalarFieldEnum], orderBy: [MessageOrderByWithRelationInput], skip: Int, take: Int, where: MessageWhereInput): [Message!]!
  passwordHash: String!
  phone: String
  responses(cursor: ResponseWhereUniqueInput, distinct: [ResponseScalarFieldEnum], orderBy: [ResponseOrderByWithRelationInput], skip: Int, take: Int, where: ResponseWhereInput): [Response!]!
  role: UserRoleEnum!
  tgLink: String
  vkLink: String
}

type UserAvgAggregateOutputType {
  id: Float
}

input UserAvgOrderByAggregateInput {
  id: SortOrder
}

type UserCountAggregateOutputType {
  _all: Int!
  createdAt: Int!
  email: Int!
  fullname: Int!
  id: Int!
  logo: Int!
  passwordHash: Int!
  phone: Int!
  role: Int!
  tgLink: Int!
  vkLink: Int!
}

input UserCountOrderByAggregateInput {
  createdAt: SortOrder
  email: SortOrder
  fullname: SortOrder
  id: SortOrder
  logo: SortOrder
  passwordHash: SortOrder
  phone: SortOrder
  role: SortOrder
  tgLink: SortOrder
  vkLink: SortOrder
}

type UserCountOutputType {
  answers: Int!
  groups: Int!
  messages: Int!
  responses: Int!
}

input UserCreateInput {
  answers: TaskAnswerCreateNestedManyWithoutUserInput
  createdAt: DateTime
  email: String!
  fullname: String
  groups: MessagerGroupCreateNestedManyWithoutUsersInput
  logo: String
  messages: MessageCreateNestedManyWithoutSenderInput
  passwordHash: String!
  phone: String
  responses: ResponseCreateNestedManyWithoutUserInput
  role: UserRoleEnum
  tgLink: String
  vkLink: String
}

input UserCreateManyInput {
  createdAt: DateTime
  email: String!
  fullname: String
  id: Int
  logo: String
  passwordHash: String!
  phone: String
  role: UserRoleEnum
  tgLink: String
  vkLink: String
}

input UserCreateNestedManyWithoutGroupsInput {
  connect: [UserWhereUniqueInput]
  connectOrCreate: [UserCreateOrConnectWithoutGroupsInput]
  create: [UserCreateWithoutGroupsInput]
}

input UserCreateNestedOneWithoutAnswersInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutAnswersInput
  create: UserCreateWithoutAnswersInput
}

input UserCreateNestedOneWithoutMessagesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutMessagesInput
  create: UserCreateWithoutMessagesInput
}

input UserCreateNestedOneWithoutResponsesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutResponsesInput
  create: UserCreateWithoutResponsesInput
}

input UserCreateOrConnectWithoutAnswersInput {
  create: UserCreateWithoutAnswersInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutGroupsInput {
  create: UserCreateWithoutGroupsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutMessagesInput {
  create: UserCreateWithoutMessagesInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutResponsesInput {
  create: UserCreateWithoutResponsesInput!
  where: UserWhereUniqueInput!
}

input UserCreateWithoutAnswersInput {
  createdAt: DateTime
  email: String!
  fullname: String
  groups: MessagerGroupCreateNestedManyWithoutUsersInput
  logo: String
  messages: MessageCreateNestedManyWithoutSenderInput
  passwordHash: String!
  phone: String
  responses: ResponseCreateNestedManyWithoutUserInput
  role: UserRoleEnum
  tgLink: String
  vkLink: String
}

input UserCreateWithoutGroupsInput {
  answers: TaskAnswerCreateNestedManyWithoutUserInput
  createdAt: DateTime
  email: String!
  fullname: String
  logo: String
  messages: MessageCreateNestedManyWithoutSenderInput
  passwordHash: String!
  phone: String
  responses: ResponseCreateNestedManyWithoutUserInput
  role: UserRoleEnum
  tgLink: String
  vkLink: String
}

input UserCreateWithoutMessagesInput {
  answers: TaskAnswerCreateNestedManyWithoutUserInput
  createdAt: DateTime
  email: String!
  fullname: String
  groups: MessagerGroupCreateNestedManyWithoutUsersInput
  logo: String
  passwordHash: String!
  phone: String
  responses: ResponseCreateNestedManyWithoutUserInput
  role: UserRoleEnum
  tgLink: String
  vkLink: String
}

input UserCreateWithoutResponsesInput {
  answers: TaskAnswerCreateNestedManyWithoutUserInput
  createdAt: DateTime
  email: String!
  fullname: String
  groups: MessagerGroupCreateNestedManyWithoutUsersInput
  logo: String
  messages: MessageCreateNestedManyWithoutSenderInput
  passwordHash: String!
  phone: String
  role: UserRoleEnum
  tgLink: String
  vkLink: String
}

input UserListRelationFilter {
  every: UserWhereInput
  none: UserWhereInput
  some: UserWhereInput
}

type UserMaxAggregateOutputType {
  createdAt: DateTime
  email: String
  fullname: String
  id: Int
  logo: String
  passwordHash: String
  phone: String
  role: UserRoleEnum
  tgLink: String
  vkLink: String
}

input UserMaxOrderByAggregateInput {
  createdAt: SortOrder
  email: SortOrder
  fullname: SortOrder
  id: SortOrder
  logo: SortOrder
  passwordHash: SortOrder
  phone: SortOrder
  role: SortOrder
  tgLink: SortOrder
  vkLink: SortOrder
}

type UserMinAggregateOutputType {
  createdAt: DateTime
  email: String
  fullname: String
  id: Int
  logo: String
  passwordHash: String
  phone: String
  role: UserRoleEnum
  tgLink: String
  vkLink: String
}

input UserMinOrderByAggregateInput {
  createdAt: SortOrder
  email: SortOrder
  fullname: SortOrder
  id: SortOrder
  logo: SortOrder
  passwordHash: SortOrder
  phone: SortOrder
  role: SortOrder
  tgLink: SortOrder
  vkLink: SortOrder
}

input UserOrderByRelationAggregateInput {
  _count: SortOrder
}

input UserOrderByWithAggregationInput {
  _avg: UserAvgOrderByAggregateInput
  _count: UserCountOrderByAggregateInput
  _max: UserMaxOrderByAggregateInput
  _min: UserMinOrderByAggregateInput
  _sum: UserSumOrderByAggregateInput
  createdAt: SortOrder
  email: SortOrder
  fullname: SortOrderInput
  id: SortOrder
  logo: SortOrderInput
  passwordHash: SortOrder
  phone: SortOrderInput
  role: SortOrder
  tgLink: SortOrderInput
  vkLink: SortOrderInput
}

input UserOrderByWithRelationInput {
  answers: TaskAnswerOrderByRelationAggregateInput
  createdAt: SortOrder
  email: SortOrder
  fullname: SortOrderInput
  groups: MessagerGroupOrderByRelationAggregateInput
  id: SortOrder
  logo: SortOrderInput
  messages: MessageOrderByRelationAggregateInput
  passwordHash: SortOrder
  phone: SortOrderInput
  responses: ResponseOrderByRelationAggregateInput
  role: SortOrder
  tgLink: SortOrderInput
  vkLink: SortOrderInput
}

input UserRelationFilter {
  is: UserWhereInput
  isNot: UserWhereInput
}

enum UserRoleEnum {
  customer
  hr
}

enum UserScalarFieldEnum {
  createdAt
  email
  fullname
  id
  logo
  passwordHash
  phone
  role
  tgLink
  vkLink
}

input UserScalarWhereInput {
  AND: [UserScalarWhereInput]
  NOT: [UserScalarWhereInput]
  OR: [UserScalarWhereInput]
  createdAt: DateTimeFilter
  email: StringFilter
  fullname: StringNullableFilter
  id: IntFilter
  logo: StringNullableFilter
  passwordHash: StringFilter
  phone: StringNullableFilter
  role: EnumUserRoleEnumFilter
  tgLink: StringNullableFilter
  vkLink: StringNullableFilter
}

input UserScalarWhereWithAggregatesInput {
  AND: [UserScalarWhereWithAggregatesInput]
  NOT: [UserScalarWhereWithAggregatesInput]
  OR: [UserScalarWhereWithAggregatesInput]
  createdAt: DateTimeWithAggregatesFilter
  email: StringWithAggregatesFilter
  fullname: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  logo: StringNullableWithAggregatesFilter
  passwordHash: StringWithAggregatesFilter
  phone: StringNullableWithAggregatesFilter
  role: EnumUserRoleEnumWithAggregatesFilter
  tgLink: StringNullableWithAggregatesFilter
  vkLink: StringNullableWithAggregatesFilter
}

type UserSumAggregateOutputType {
  id: Int
}

input UserSumOrderByAggregateInput {
  id: SortOrder
}

input UserUncheckedCreateInput {
  answers: TaskAnswerUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTime
  email: String!
  fullname: String
  groups: MessagerGroupUncheckedCreateNestedManyWithoutUsersInput
  id: Int
  logo: String
  messages: MessageUncheckedCreateNestedManyWithoutSenderInput
  passwordHash: String!
  phone: String
  responses: ResponseUncheckedCreateNestedManyWithoutUserInput
  role: UserRoleEnum
  tgLink: String
  vkLink: String
}

input UserUncheckedCreateNestedManyWithoutGroupsInput {
  connect: [UserWhereUniqueInput]
  connectOrCreate: [UserCreateOrConnectWithoutGroupsInput]
  create: [UserCreateWithoutGroupsInput]
}

input UserUncheckedCreateWithoutAnswersInput {
  createdAt: DateTime
  email: String!
  fullname: String
  groups: MessagerGroupUncheckedCreateNestedManyWithoutUsersInput
  id: Int
  logo: String
  messages: MessageUncheckedCreateNestedManyWithoutSenderInput
  passwordHash: String!
  phone: String
  responses: ResponseUncheckedCreateNestedManyWithoutUserInput
  role: UserRoleEnum
  tgLink: String
  vkLink: String
}

input UserUncheckedCreateWithoutGroupsInput {
  answers: TaskAnswerUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTime
  email: String!
  fullname: String
  id: Int
  logo: String
  messages: MessageUncheckedCreateNestedManyWithoutSenderInput
  passwordHash: String!
  phone: String
  responses: ResponseUncheckedCreateNestedManyWithoutUserInput
  role: UserRoleEnum
  tgLink: String
  vkLink: String
}

input UserUncheckedCreateWithoutMessagesInput {
  answers: TaskAnswerUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTime
  email: String!
  fullname: String
  groups: MessagerGroupUncheckedCreateNestedManyWithoutUsersInput
  id: Int
  logo: String
  passwordHash: String!
  phone: String
  responses: ResponseUncheckedCreateNestedManyWithoutUserInput
  role: UserRoleEnum
  tgLink: String
  vkLink: String
}

input UserUncheckedCreateWithoutResponsesInput {
  answers: TaskAnswerUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTime
  email: String!
  fullname: String
  groups: MessagerGroupUncheckedCreateNestedManyWithoutUsersInput
  id: Int
  logo: String
  messages: MessageUncheckedCreateNestedManyWithoutSenderInput
  passwordHash: String!
  phone: String
  role: UserRoleEnum
  tgLink: String
  vkLink: String
}

input UserUncheckedUpdateInput {
  answers: TaskAnswerUncheckedUpdateManyWithoutUserNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  fullname: NullableStringFieldUpdateOperationsInput
  groups: MessagerGroupUncheckedUpdateManyWithoutUsersNestedInput
  id: IntFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  messages: MessageUncheckedUpdateManyWithoutSenderNestedInput
  passwordHash: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  responses: ResponseUncheckedUpdateManyWithoutUserNestedInput
  role: EnumUserRoleEnumFieldUpdateOperationsInput
  tgLink: NullableStringFieldUpdateOperationsInput
  vkLink: NullableStringFieldUpdateOperationsInput
}

input UserUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  fullname: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  role: EnumUserRoleEnumFieldUpdateOperationsInput
  tgLink: NullableStringFieldUpdateOperationsInput
  vkLink: NullableStringFieldUpdateOperationsInput
}

input UserUncheckedUpdateManyWithoutGroupsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  fullname: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  role: EnumUserRoleEnumFieldUpdateOperationsInput
  tgLink: NullableStringFieldUpdateOperationsInput
  vkLink: NullableStringFieldUpdateOperationsInput
}

input UserUncheckedUpdateManyWithoutGroupsNestedInput {
  connect: [UserWhereUniqueInput]
  connectOrCreate: [UserCreateOrConnectWithoutGroupsInput]
  create: [UserCreateWithoutGroupsInput]
  delete: [UserWhereUniqueInput]
  deleteMany: [UserScalarWhereInput]
  disconnect: [UserWhereUniqueInput]
  set: [UserWhereUniqueInput]
  update: [UserUpdateWithWhereUniqueWithoutGroupsInput]
  updateMany: [UserUpdateManyWithWhereWithoutGroupsInput]
  upsert: [UserUpsertWithWhereUniqueWithoutGroupsInput]
}

input UserUncheckedUpdateWithoutAnswersInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  fullname: NullableStringFieldUpdateOperationsInput
  groups: MessagerGroupUncheckedUpdateManyWithoutUsersNestedInput
  id: IntFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  messages: MessageUncheckedUpdateManyWithoutSenderNestedInput
  passwordHash: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  responses: ResponseUncheckedUpdateManyWithoutUserNestedInput
  role: EnumUserRoleEnumFieldUpdateOperationsInput
  tgLink: NullableStringFieldUpdateOperationsInput
  vkLink: NullableStringFieldUpdateOperationsInput
}

input UserUncheckedUpdateWithoutGroupsInput {
  answers: TaskAnswerUncheckedUpdateManyWithoutUserNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  fullname: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  messages: MessageUncheckedUpdateManyWithoutSenderNestedInput
  passwordHash: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  responses: ResponseUncheckedUpdateManyWithoutUserNestedInput
  role: EnumUserRoleEnumFieldUpdateOperationsInput
  tgLink: NullableStringFieldUpdateOperationsInput
  vkLink: NullableStringFieldUpdateOperationsInput
}

input UserUncheckedUpdateWithoutMessagesInput {
  answers: TaskAnswerUncheckedUpdateManyWithoutUserNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  fullname: NullableStringFieldUpdateOperationsInput
  groups: MessagerGroupUncheckedUpdateManyWithoutUsersNestedInput
  id: IntFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  responses: ResponseUncheckedUpdateManyWithoutUserNestedInput
  role: EnumUserRoleEnumFieldUpdateOperationsInput
  tgLink: NullableStringFieldUpdateOperationsInput
  vkLink: NullableStringFieldUpdateOperationsInput
}

input UserUncheckedUpdateWithoutResponsesInput {
  answers: TaskAnswerUncheckedUpdateManyWithoutUserNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  fullname: NullableStringFieldUpdateOperationsInput
  groups: MessagerGroupUncheckedUpdateManyWithoutUsersNestedInput
  id: IntFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  messages: MessageUncheckedUpdateManyWithoutSenderNestedInput
  passwordHash: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  role: EnumUserRoleEnumFieldUpdateOperationsInput
  tgLink: NullableStringFieldUpdateOperationsInput
  vkLink: NullableStringFieldUpdateOperationsInput
}

input UserUpdateInput {
  answers: TaskAnswerUpdateManyWithoutUserNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  fullname: NullableStringFieldUpdateOperationsInput
  groups: MessagerGroupUpdateManyWithoutUsersNestedInput
  logo: NullableStringFieldUpdateOperationsInput
  messages: MessageUpdateManyWithoutSenderNestedInput
  passwordHash: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  responses: ResponseUpdateManyWithoutUserNestedInput
  role: EnumUserRoleEnumFieldUpdateOperationsInput
  tgLink: NullableStringFieldUpdateOperationsInput
  vkLink: NullableStringFieldUpdateOperationsInput
}

input UserUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  fullname: NullableStringFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  role: EnumUserRoleEnumFieldUpdateOperationsInput
  tgLink: NullableStringFieldUpdateOperationsInput
  vkLink: NullableStringFieldUpdateOperationsInput
}

input UserUpdateManyWithWhereWithoutGroupsInput {
  data: UserUpdateManyMutationInput!
  where: UserScalarWhereInput!
}

input UserUpdateManyWithoutGroupsNestedInput {
  connect: [UserWhereUniqueInput]
  connectOrCreate: [UserCreateOrConnectWithoutGroupsInput]
  create: [UserCreateWithoutGroupsInput]
  delete: [UserWhereUniqueInput]
  deleteMany: [UserScalarWhereInput]
  disconnect: [UserWhereUniqueInput]
  set: [UserWhereUniqueInput]
  update: [UserUpdateWithWhereUniqueWithoutGroupsInput]
  updateMany: [UserUpdateManyWithWhereWithoutGroupsInput]
  upsert: [UserUpsertWithWhereUniqueWithoutGroupsInput]
}

input UserUpdateOneRequiredWithoutAnswersNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutAnswersInput
  create: UserCreateWithoutAnswersInput
  update: UserUpdateToOneWithWhereWithoutAnswersInput
  upsert: UserUpsertWithoutAnswersInput
}

input UserUpdateOneRequiredWithoutMessagesNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutMessagesInput
  create: UserCreateWithoutMessagesInput
  update: UserUpdateToOneWithWhereWithoutMessagesInput
  upsert: UserUpsertWithoutMessagesInput
}

input UserUpdateOneRequiredWithoutResponsesNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutResponsesInput
  create: UserCreateWithoutResponsesInput
  update: UserUpdateToOneWithWhereWithoutResponsesInput
  upsert: UserUpsertWithoutResponsesInput
}

input UserUpdateToOneWithWhereWithoutAnswersInput {
  data: UserUpdateWithoutAnswersInput!
  where: UserWhereInput
}

input UserUpdateToOneWithWhereWithoutMessagesInput {
  data: UserUpdateWithoutMessagesInput!
  where: UserWhereInput
}

input UserUpdateToOneWithWhereWithoutResponsesInput {
  data: UserUpdateWithoutResponsesInput!
  where: UserWhereInput
}

input UserUpdateWithWhereUniqueWithoutGroupsInput {
  data: UserUpdateWithoutGroupsInput!
  where: UserWhereUniqueInput!
}

input UserUpdateWithoutAnswersInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  fullname: NullableStringFieldUpdateOperationsInput
  groups: MessagerGroupUpdateManyWithoutUsersNestedInput
  logo: NullableStringFieldUpdateOperationsInput
  messages: MessageUpdateManyWithoutSenderNestedInput
  passwordHash: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  responses: ResponseUpdateManyWithoutUserNestedInput
  role: EnumUserRoleEnumFieldUpdateOperationsInput
  tgLink: NullableStringFieldUpdateOperationsInput
  vkLink: NullableStringFieldUpdateOperationsInput
}

input UserUpdateWithoutGroupsInput {
  answers: TaskAnswerUpdateManyWithoutUserNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  fullname: NullableStringFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  messages: MessageUpdateManyWithoutSenderNestedInput
  passwordHash: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  responses: ResponseUpdateManyWithoutUserNestedInput
  role: EnumUserRoleEnumFieldUpdateOperationsInput
  tgLink: NullableStringFieldUpdateOperationsInput
  vkLink: NullableStringFieldUpdateOperationsInput
}

input UserUpdateWithoutMessagesInput {
  answers: TaskAnswerUpdateManyWithoutUserNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  fullname: NullableStringFieldUpdateOperationsInput
  groups: MessagerGroupUpdateManyWithoutUsersNestedInput
  logo: NullableStringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  responses: ResponseUpdateManyWithoutUserNestedInput
  role: EnumUserRoleEnumFieldUpdateOperationsInput
  tgLink: NullableStringFieldUpdateOperationsInput
  vkLink: NullableStringFieldUpdateOperationsInput
}

input UserUpdateWithoutResponsesInput {
  answers: TaskAnswerUpdateManyWithoutUserNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  fullname: NullableStringFieldUpdateOperationsInput
  groups: MessagerGroupUpdateManyWithoutUsersNestedInput
  logo: NullableStringFieldUpdateOperationsInput
  messages: MessageUpdateManyWithoutSenderNestedInput
  passwordHash: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  role: EnumUserRoleEnumFieldUpdateOperationsInput
  tgLink: NullableStringFieldUpdateOperationsInput
  vkLink: NullableStringFieldUpdateOperationsInput
}

input UserUpsertWithWhereUniqueWithoutGroupsInput {
  create: UserCreateWithoutGroupsInput!
  update: UserUpdateWithoutGroupsInput!
  where: UserWhereUniqueInput!
}

input UserUpsertWithoutAnswersInput {
  create: UserCreateWithoutAnswersInput!
  update: UserUpdateWithoutAnswersInput!
  where: UserWhereInput
}

input UserUpsertWithoutMessagesInput {
  create: UserCreateWithoutMessagesInput!
  update: UserUpdateWithoutMessagesInput!
  where: UserWhereInput
}

input UserUpsertWithoutResponsesInput {
  create: UserCreateWithoutResponsesInput!
  update: UserUpdateWithoutResponsesInput!
  where: UserWhereInput
}

input UserWhereInput {
  AND: [UserWhereInput]
  NOT: [UserWhereInput]
  OR: [UserWhereInput]
  answers: TaskAnswerListRelationFilter
  createdAt: DateTimeFilter
  email: StringFilter
  fullname: StringNullableFilter
  groups: MessagerGroupListRelationFilter
  id: IntFilter
  logo: StringNullableFilter
  messages: MessageListRelationFilter
  passwordHash: StringFilter
  phone: StringNullableFilter
  responses: ResponseListRelationFilter
  role: EnumUserRoleEnumFilter
  tgLink: StringNullableFilter
  vkLink: StringNullableFilter
}

input UserWhereUniqueInput {
  AND: [UserWhereInput]
  NOT: [UserWhereInput]
  OR: [UserWhereInput]
  answers: TaskAnswerListRelationFilter
  createdAt: DateTimeFilter
  email: String
  fullname: StringNullableFilter
  groups: MessagerGroupListRelationFilter
  id: Int
  logo: StringNullableFilter
  messages: MessageListRelationFilter
  passwordHash: StringFilter
  phone: StringNullableFilter
  responses: ResponseListRelationFilter
  role: EnumUserRoleEnumFilter
  tgLink: StringNullableFilter
  vkLink: StringNullableFilter
}
